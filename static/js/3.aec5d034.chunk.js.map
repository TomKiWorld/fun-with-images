{"version":3,"sources":["images/FaceOne.svg","images/FaceTwo.svg","images/FaceThree.svg","images/FaceFour.svg","components/ProfileAvatar/ProfileAvatar.js","components/ImageCard/ImageCard.js","components/Wiggle/Wiggle.js","components/ImageList/ImageList.js","components/ProfileGreet/ProfileGreet.js","components/Modal/Modal.js","components/AvatarImage/AvatarImage.js","components/ProfileModal/ProfileModal.js","components/PopUp/PopUp.js","components/PopUpMsg/PopUpMsg.js","containers/Profile/Profile.js","containers/MainProfile/MainProfile.js"],"names":["module","exports","setclasses","text","avatar","ProfileAvatar","title","selectAvatar","className","src","avatarOne","alt","onClick","avatarTwo","avatarThree","avatarFour","ImageCard","id","url","onResubmit","style","backgroundImage","Wiggle","props","state","width","height","left","top","transitionTimeout","updateCall","element","settings","Object","assign","reverse","max","perspective","easing","scale","speed","transition","axis","reset","options","onMouseEnter","bind","onMouseMove","onMouseLeave","this","document","getElementById","elementId","clearTimeout","cancelAnimationFrame","cb","e","updateElementPosition","setState","willChange","setTransition","window","requestAnimationFrame","transform","persist","event","update","setTimeout","x","nativeEvent","clientX","y","clientY","_x","Math","min","_y","tiltX","toFixed","tiltY","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","getValues","children","Component","ImageList","images","map","image","key","ProfileGreet","entries","Modal","container","el","createElement","appendChild","removeChild","ReactDOM","createPortal","getAvatar","avatarId","AvatarImage","ProfileModal","getJoinedDate","joinedDate","Date","user","joined","getDate","getMonth","getFullYear","onFieldChange","term","target","value","onSubmitUpdate","preventDefault","name","loading","fetch","DATABASE","method","headers","sessionStorage","getItem","body","JSON","stringify","then","response","json","loadUser","updateError","catch","err","toggleModal","showRemoveButton","preload","Preloader","toggleMenu","FormInput","label","type","placeholder","onChange","email","Popup","classList","add","PopUpMsg","message","closePopUp","closeBtn","querySelector","click","Profile","getProfileImages","data","length","console","log","onImageResubmit","onResubmitInput","onRouteChange","onImageChange","onImageError","onResubmitImageUrl","onSubmitRemoval","popUpMsg","removeItem","onChangeProtected","indexOf","prevState","isProfileOpen","role","aria-label","PopUp","MainProfile","connect","userInformation","dispatch","resubmitImageInput","bool","resubmitImageUrl","setImageUrl","setImageUrlErr"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,iCCA3C,4FAQMC,GARN,OAQmB,SAACC,EAAMC,GACxB,OAAOD,IAASC,EAAS,2BAA6B,oBAqCzCC,IAlCO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOF,EAA2B,EAA3BA,OAAQG,EAAmB,EAAnBA,aACtC,OACE,6BACE,uBAAGC,UAAU,qBAAqBF,GAClC,yBAAKE,UAAU,mBACb,yBACEA,UAAWN,EAAW,YAAaE,GACnCK,IAAKC,IACLC,IAAI,aACJC,QAAS,kBAAML,EAAa,gBAE9B,yBACEC,UAAWN,EAAW,YAAaE,GACnCK,IAAKI,IACLF,IAAI,aACJC,QAAS,kBAAML,EAAa,gBAE9B,yBACEC,UAAWN,EAAW,cAAeE,GACrCK,IAAKK,IACLH,IAAI,eACJC,QAAS,kBAAML,EAAa,kBAE9B,yBACEC,UAAWN,EAAW,aAAcE,GACpCK,IAAKM,IACLJ,IAAI,cACJC,QAAS,kBAAML,EAAa,qB,sOCpBvBS,G,cARG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,WAC3B,OACE,yBAAKF,GAAE,oBAAeA,GAAMT,UAAU,YAAYY,MAAO,CAACC,gBAAgB,QAAD,OAASH,EAAT,QACvE,4BAAQV,UAAU,cAAcI,QAAS,kBAAMO,EAAWD,KAA1D,e,QCmLSI,E,kDArLb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IACDC,MAAQ,CACXJ,MAAQ,IAHO,OAkBjB,EAAKK,MAAQ,KACb,EAAKC,OAAS,KACd,EAAKC,KAAO,KACZ,EAAKC,IAAM,KACX,EAAKC,kBAAoB,KACzB,EAAKC,WAAa,KAClB,EAAKC,QAAU,KACf,EAAKC,SAAWC,OAAOC,OAAO,GAnBN,CACtBC,SAAS,EACTC,IAAK,GACLC,YAAa,IACbC,OAAQ,gCACRC,MAAO,MACPC,MAAO,OACPC,YAAY,EACZC,KAAM,KACNC,OAAO,GAU0C,EAAKpB,MAAMqB,SAC9D,EAAKT,QAAU,EAAKH,SAASG,SAAW,EAAI,EAG5C,EAAKU,aAAe,EAAKA,aAAaC,KAAlB,eAA6B,EAAKvB,MAAMsB,cAC5D,EAAKE,YAAc,EAAKA,YAAYD,KAAjB,eAA4B,EAAKvB,MAAMwB,aAC1D,EAAKC,aAAe,EAAKA,aAAaF,KAAlB,eAA6B,EAAKvB,MAAMyB,cA/B3C,E,gEAoCjBC,KAAKlB,QAAUmB,SAASC,eAAeF,KAAK1B,MAAM6B,a,6CAKlDC,aAAaJ,KAAKpB,mBAClByB,qBAAqBL,KAAKnB,c,qCAII,IAAnByB,EAAkB,uDAAb,aAAUC,EAAG,uCAY7B,OAXAP,KAAKQ,wBAELR,KAAKS,SAASzB,OAAOC,OAAO,GAAIe,KAAKzB,MAAO,CAC1CJ,MAAK,2BACA6B,KAAKzB,MAAMJ,OADX,IAEHuC,WAAa,iBAIjBV,KAAKW,gBAEEL,EAAGC,K,8BAIH,IAAD,OACNK,OAAOC,uBAAsB,WAC3B,EAAKJ,SAASzB,OAAOC,OAAO,GAAI,EAAKV,MAAO,CAC1CJ,MAAK,2BACA,EAAKI,MAAMJ,OADX,IAGH2C,UAAS,sBAAkB,EAAK/B,SAASK,YAAhC,8D,oCAOc,IAAnBkB,EAAkB,uDAAb,aAAUC,EAAG,uCAU5B,OATAA,EAAEQ,UAEsB,OAApBf,KAAKnB,YACP+B,OAAOP,qBAAqBL,KAAKnB,YAGnCmB,KAAKgB,MAAQT,EACbP,KAAKnB,WAAagC,sBAAsBb,KAAKiB,OAAOpB,KAAKG,KAAMO,IAExDD,EAAGC,K,sCAIK,IAAD,OACdH,aAAaJ,KAAKpB,mBAElBoB,KAAKS,SAASzB,OAAOC,OAAO,GAAIe,KAAKzB,MAAO,CAC1CJ,MAAK,2BACA6B,KAAKzB,MAAMJ,OADX,IAEHqB,WAAU,UAAMQ,KAAKjB,SAASQ,MAApB,cAA+BS,KAAKjB,SAASM,aAI3DW,KAAKpB,kBAAoBsC,YAAW,WAClC,EAAKT,SAASzB,OAAOC,OAAO,GAAI,EAAKV,MAAO,CAC1CJ,MAAK,2BACA,EAAKI,MAAMJ,OADX,IAEHqB,WAAY,UAGfQ,KAAKjB,SAASQ,S,qCAIa,IAAnBe,EAAkB,uDAAb,aAAUC,EAAG,uCAM7B,OALAP,KAAKW,gBAEDX,KAAKjB,SAASW,OAChBM,KAAKN,QAEAY,EAAGC,K,gCAIFA,GACR,IAAMY,GAAKZ,EAAEa,YAAYC,QAAUrB,KAAKtB,MAAQsB,KAAKxB,MAC/C8C,GAAKf,EAAEa,YAAYG,QAAUvB,KAAKrB,KAAOqB,KAAKvB,OAC9C+C,EAAKC,KAAKC,IAAID,KAAKtC,IAAIgC,EAAG,GAAI,GAC9BQ,EAAKF,KAAKC,IAAID,KAAKtC,IAAImC,EAAG,GAAI,GAQpC,MAAO,CACLM,OAPa5B,KAAKd,SAAWc,KAAKjB,SAASI,IAAM,EAAIqC,EAAKxB,KAAKjB,SAASI,MAAM0C,QAAQ,GAQtFC,OAPa9B,KAAKd,SAAWyC,EAAK3B,KAAKjB,SAASI,IAAMa,KAAKjB,SAASI,IAAM,IAAI0C,QAAQ,GAQtFE,YANwB,IAALP,EAOnBQ,YANuB,IAALL,K,8CAYpB,IAAMM,EAAOjC,KAAKlB,QAAQoD,wBAC1BlC,KAAKxB,MAAQwB,KAAKlB,QAAQqD,YAC1BnC,KAAKvB,OAASuB,KAAKlB,QAAQsD,aAC3BpC,KAAKtB,KAAOuD,EAAKvD,KACjBsB,KAAKrB,IAAMsD,EAAKtD,M,6BAIX4B,GACL,IAAI8B,EAASrC,KAAKsC,UAAU/B,GAE5BP,KAAKS,SAASzB,OAAOC,OAAO,GAAIe,KAAKzB,MAAO,CACxCJ,MAAK,2BACA6B,KAAKzB,MAAMJ,OADX,IAEH2C,UAAU,eAAD,OAAiBd,KAAKjB,SAASK,YAA/B,8CACoC,MAAvBY,KAAKjB,SAASU,KAAe,EAAI4C,EAAOP,MADrD,+CAEoC,MAAvB9B,KAAKjB,SAASU,KAAe,EAAI4C,EAAOT,MAFrD,+CAGa5B,KAAKjB,SAASO,MAH3B,aAGqCU,KAAKjB,SAASO,MAHnD,aAG6DU,KAAKjB,SAASO,MAH3E,UAOfU,KAAKnB,WAAa,O,+BAIlB,IAAMV,EAAQa,OAAOC,OAAO,GAAIe,KAAK1B,MAAMH,MAAO6B,KAAKzB,MAAMJ,OAC7D,OACE,yBAAKA,MAAOA,EACVyB,aAAcI,KAAKJ,aACnBE,YAAaE,KAAKF,YAClBC,aAAcC,KAAKD,aACnBJ,QAAS,CAAER,IAAM,KAEhBa,KAAK1B,MAAMiE,c,GAhLCC,aCgBNC,EAvBG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAASxE,EAAgB,EAAhBA,WAC5B,OACE,yBAAKX,UAAU,oBAEXmF,EAAOC,KAAI,SAAAC,GACT,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAM5E,GACXmC,UAAS,oBAAgByC,EAAM5E,KAC7B,kBAAC,EAAD,CACE6E,IAAKD,EAAM5E,GACXA,GAAI4E,EAAM5E,GACVC,IAAK2E,EAAM3E,IACXC,WAAYA,U,QCFf4E,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAIA,EAAU,EAER,6BACE,0DAAgCA,EAAhC,mBACA,2EACA,2FAGC,uE,iBCaIC,G,yDAnBb,WAAY1E,GAAQ,IAAD,8BACjB,cAAMA,IACD2E,UAAYhD,SAASC,eAAe,cACzC,EAAKgD,GAAKjD,SAASkD,cAAc,OAHhB,E,gEAOjBnD,KAAKiD,UAAUG,YAAYpD,KAAKkD,M,6CAIhClD,KAAKiD,UAAUI,YAAYrD,KAAKkD,M,+BAIhC,OAAOI,IAASC,aAAavD,KAAK1B,MAAMiE,SAAUvC,KAAKkD,Q,GAhBvCV,c,iGCEdgB,EAAY,SAACC,GACjB,OAAOA,GACL,IAAK,YACH,OAAOhG,IACT,IAAK,YACH,OAAOG,IACT,IAAK,cACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,QACE,OAAOL,MAaEiG,EATK,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SACrB,OACE,yBACEjG,IAAKgG,EAAUC,GACflG,UAAU,aAAaG,IAAI,YC6GlBiG,E,kDA7Hb,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IASRsF,cAAgB,WACd,IAAMC,EAAa,IAAIC,KAAK,EAAKxF,MAAMyF,KAAKC,QAI5C,MAAM,GAAN,OAAUH,EAAWI,UAArB,YAHmB,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEnEJ,EAAWK,YAAxD,YAAuEL,EAAWM,gBAfjE,EAkBnB7G,aAAe,SAACH,GACd,EAAKsD,SAAS,CAACtD,OAAQA,KAnBN,EAuBnBiH,cAAgB,SAACpD,EAAOqD,GACtB,EAAK5D,SAAL,eAAgB4D,EAAOrD,EAAMsD,OAAOC,SAxBnB,EA4BnBC,eAAiB,SAACjE,GAChBA,EAAEkE,iBADoB,MAEG,EAAKlG,MAAtBmG,EAFc,EAEdA,KAAMvH,EAFQ,EAERA,OACd,EAAKsD,SAAS,CAACkE,SAAS,IAExBC,MAAM,GAAD,OAAIC,IAAJ,oBAAwB,EAAKvG,MAAMyF,KAAK/F,IAAM,CACjD8G,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBnE,OAAOoE,eAAeC,QAAQ,UAEjDC,KAAMC,KAAKC,UAAU,CACnBV,KAAMA,EACNvH,OAAQA,MAGXkI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtB,GACAA,EAAK/F,IACP,EAAKM,MAAMkH,SAASzB,GACpB,EAAKtD,SAAS,CACZiE,KAAMX,EAAKW,KACXvH,OAAQ4G,EAAK5G,OACbsI,YAAa,GACbd,SAAS,KAGX,EAAKlE,SAAS,CACZgF,YAAa1B,EACbY,SAAS,OAIde,OAAM,SAAAC,GACL,EAAKlF,SAAS,CACZgF,YAAa,8CACbd,SAAS,QA9Db,EAAKpG,MAAQ,CACXmG,KAAM,EAAKpG,MAAMyF,KAAKW,KACtBvH,OAAQ,EAAKmB,MAAMyF,KAAK5G,OACxBsI,YAAa,GACbd,SAAS,GANM,E,qDAqET,IAAD,SACyC3E,KAAK1B,MAA7CsH,EADD,EACCA,YAAa7B,EADd,EACcA,KAAM8B,EADpB,EACoBA,iBADpB,EAEkB7F,KAAKzB,MAAtBmG,EAFD,EAECA,KAAMvH,EAFP,EAEOA,OACRsI,EAAczF,KAAKzB,MAAMkH,YAAc,uBAAGlI,UAAU,iBAAiByC,KAAKzB,MAAMkH,aAAmB,GACnGK,EAAU9F,KAAKzB,MAAMoG,QAAU,kBAACoB,EAAA,EAAD,MAAe,GACpD,OACE,yBAAKxI,UAAU,iBACb,6BAASA,UAAU,uEACjB,0BAAMA,UAAU,mBAAmBI,QAASiI,GAA5C,QACA,gCACE,kBAAC,EAAD,CACEnC,SAAUtG,EACV6I,WAAYJ,IAEd,wBAAIrI,UAAU,qBAAqBmH,GACnC,yBAAKnH,UAAU,gBACb,gDAAsBwG,EAAKhB,SAC3B,4CAAkB/C,KAAK4D,mBAG3B,8BACE,8BACE,kBAACqC,EAAA,EAAD,CACEC,MAAM,mBACNxB,KAAK,OACLyB,KAAK,OACLC,YAAa1B,EACb2B,SAAU,SAAC9F,GAAD,OAAO,EAAK6D,cAAc7D,EAAG,WAEzC,kBAACnD,EAAA,EAAD,CACEC,MAAM,uBACNF,OAAQA,EACRG,aAAc0C,KAAK1C,eAErB,yBAAKC,UAAU,uBACb,2BACEI,QAASqC,KAAKwE,eACdjH,UAAU,iCACV4I,KAAK,SACL5B,MAAM,SAER,4BAAQhH,UAAU,iCAAiCI,QAASiI,GAA5D,WAEDH,IAGJI,EAAiB9B,EAAKuC,OACtBR,Q,GArHgBtD,aCiBZ+D,G,yDApBb,WAAYjI,GAAQ,IAAD,8BACjB,cAAMA,IACD2E,UAAYhD,SAASC,eAAe,eACzC,EAAKgD,GAAKjD,SAASkD,cAAc,OACjC,EAAKD,GAAGsD,UAAUC,IAAI,oBAJL,E,gEAQjBzG,KAAKiD,UAAUG,YAAYpD,KAAKkD,M,6CAIhClD,KAAKiD,UAAUI,YAAYrD,KAAKkD,M,+BAIhC,OAAOI,IAASC,aAAavD,KAAK1B,MAAMiE,SAAUvC,KAAKkD,Q,GAjBvCV,cCgBLkE,EAlBE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAQ3B,OAPA1F,YAAW,WACT,IAAM2F,EAAW5G,SAAS6G,cAAc,iBACpCD,GACFA,EAASE,UAEV,KAGD,yBAAKxJ,UAAU,kBACb,0BACEA,UAAU,eACVI,QAASiJ,GAFX,QAGA,2BAAID,KCyKKK,E,kDA7Jb,aAAe,IAAD,8BACZ,gBAcFC,iBAAmB,WACjB,OAAOrC,MAAM,GAAD,OAAIC,IAAJ,2BAA+B,EAAKvG,MAAMyF,KAAK/F,IAAK,CAC9D8G,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBnE,OAAOoE,eAAeC,QAAQ,YAGlDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA6B,GACS,iBAATA,GAA2BA,EAAKC,QAClC,EAAK1G,SAAS,CAACiC,OAAQwE,OAG1BxB,OAAM,SAAAC,GAAG,OAAIyB,QAAQC,IAAI,8BA7Bd,EAiCdC,gBAAkB,SAACrJ,GACjB,EAAKK,MAAMiJ,gBAAgBtJ,GAC3B,EAAKK,MAAMkJ,cAAc,QACzB,EAAKlJ,MAAMmJ,cAAc,IACzB,EAAKnJ,MAAMoJ,aAAa,IACxB,EAAKpJ,MAAMqJ,oBAAmB,IAtClB,EA0CdC,gBAAkB,WAChBhD,MAAM,GAAD,OAAIC,IAAJ,4BAAgC,EAAKvG,MAAMyF,KAAK/F,IAAM,CACzD8G,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBnE,OAAOoE,eAAeC,QAAQ,UAEjDC,KAAMC,KAAKC,UAAU,CACnBkB,MAAO,EAAKhI,MAAMyF,KAAKuC,MACvBtI,GAAI,EAAKM,MAAMyF,KAAK/F,OAGvBqH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA6B,GACJ,EAAKzG,SAAS,CAACoH,SAAUX,IACzBtG,OAAOoE,eAAe8C,WAAW,SACjC5G,YAAW,WACT,EAAK5C,MAAMkJ,cAAc,YACxB,QAGJ9B,OAAM,SAAAC,GACL,EAAKlF,SAAS,CAACoH,SAAU,iCAhEf,EAoEdE,kBAAoB,WAClB,EAAKtH,SAAS,CAAEoH,SAAU,yDArEd,EAwEdhC,iBAAmB,SAACS,GAOlB,MANwB,CACtB,oBACA,oBAEsC0B,QAAQ1B,IAAU,EAWtD,4BACE/I,UAAU,wCACVI,QAAS,EAAKoK,mBAFhB,kBAPA,4BACExK,UAAU,wCACVI,QAAS,EAAKiK,iBAFhB,mBAjFQ,EA+FdhB,WAAa,WACX,EAAKnG,SAAS,CAAEoH,SAAU,MAhGd,EAmGdjC,YAAc,WACZ,EAAKnF,UAAS,SAAAwH,GAAS,kCAClB,EAAK1J,OADa,IAErB2J,eAAgBD,EAAUC,oBApG5B,EAAK3J,MAAQ,CACXmE,OAAQ,GACRwF,eAAe,EACfL,SAAU,IALA,E,gEAWZ7H,KAAKiH,qB,+BA+FG,IACAlD,EAAS/D,KAAK1B,MAAdyF,KACJrB,EAASqB,EAAKhB,QAAU,EAC1B,kBAACgD,EAAA,EAAD,MACA,kDAAuB,0BAAMoC,KAAK,MAAMC,aAAW,iBAA5B,iBAUzB,OARE1F,EADE1C,KAAKzB,MAAMmE,OAAOyE,OAElB,kBAAC,EAAD,CACEzE,OAAQ1C,KAAKzB,MAAMmE,OACnBxE,WAAY8B,KAAKsH,kBAEZ,qDAIT,6BAAS/J,UAAU,mBACjB,kBAAC,EAAD,CACIkG,SAAUM,EAAK5G,SAEnB,kCAAO,0BAAMI,UAAU,cAAcwG,EAAKW,OAC1C,kBAAC,EAAD,CAAc3B,QAASgB,EAAKhB,UAC5B,4BACExF,UAAU,kBACVI,QAASqC,KAAK4F,aAFhB,qBAGA,iCACGlD,GAED1C,KAAKzB,MAAM2J,eACX,kBAAC,EAAD,KACE,kBAAC,EAAD,CACErC,iBAAkB7F,KAAK6F,iBACvBqC,cAAelI,KAAKzB,MAAM2J,cAC1BtC,YAAa5F,KAAK4F,YAClBJ,SAAUxF,KAAK1B,MAAMkH,SACrBzB,KAAMA,KAIV/D,KAAKzB,MAAMsJ,UACX,kBAACQ,EAAD,KACE,kBAAC,EAAD,CACA1B,QAAS3G,KAAKzB,MAAMsJ,SACpBjB,WAAY5G,KAAK4G,mB,GArJPpE,aCFhB8F,E,uKAEF,OAAO,kBAAC,EAAatI,KAAK1B,W,GAFJkE,aAMX+F,uBAxBS,SAAChK,GACvB,MAAO,CACLwF,KAAMxF,EAAMiK,gBAAgBzE,SAIL,SAAC0E,GAC1B,MAAO,CACLlB,gBAAiB,SAACrK,GAAD,OAAUuL,EAASC,YAAmBxL,KACvDyK,mBAAoB,SAACgB,GAAD,OAAUF,EAASG,YAAiBD,KACxDlB,cAAe,SAACvK,GAAD,OAAUuL,EAASI,YAAY3L,KAC9CwK,aAAc,SAACxK,GAAD,OAAUuL,EAASK,YAAe5L,QAarCqL,CAA6CD","file":"static/js/3.aec5d034.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FaceOne.2fe015e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceTwo.94a805f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceThree.11ca4909.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceFour.3a91bf1c.svg\";","import React from 'react';\nimport avatarOne from '../../images/FaceOne.svg';\nimport avatarTwo from '../../images/FaceTwo.svg';\nimport avatarThree from '../../images/FaceThree.svg';\nimport avatarFour from '../../images/FaceFour.svg';\n\nimport './ProfileAvatar.css';\n\nconst setclasses = (text, avatar) => {\n  return text === avatar ? 'avatar-img grow selected' : 'avatar-img grow';\n}\n\nconst ProfileAvatar = ({ title, avatar, selectAvatar }) => {\n  return (\n    <div>\n      <p className='db fw6 lh-copy f6'>{title}</p>\n      <div className='profile-avatars'>\n        <img\n          className={setclasses('avatarOne', avatar)}\n          src={avatarOne}\n          alt='Avatar one'\n          onClick={() => selectAvatar('avatarOne')}\n        />\n        <img\n          className={setclasses('avatarTwo', avatar)}\n          src={avatarTwo} \n          alt='Avatar two'\n          onClick={() => selectAvatar('avatarTwo')}\n        />\n        <img\n          className={setclasses('avatarThree', avatar)}\n          src={avatarThree} \n          alt='Avatar three' \n          onClick={() => selectAvatar('avatarThree')}\n        />\n        <img\n          className={setclasses('avatarFour', avatar)}\n          src={avatarFour} \n          alt='Avatar four' \n          onClick={() => selectAvatar('avatarFour')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileAvatar;\n","import React from 'react';\nimport './ImageCard.css';\n\n/**\n * Image card to display submitted images with option to resubmit\n * \n * Required props:\n * - id => Image id for css selector\n * - url => Image url to display as background\n * - onResubmit => Function to resubmit the image \n */\nconst ImageCard = ({id, url, onResubmit}) => {\n  return (\n    <div id={`ImageCard-${id}`} className='ImageCard' style={{backgroundImage:`url(\"${url}\")`}}>\n      <button className='card-button' onClick={() => onResubmit(url)}>Resubmit</button>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React, { Component } from 'react';\n\n/**\n * Wiggle component\n * Used to adjust element prespective on hover\n * Has no content but it's children\n * \n * Required props:\n * - elementId => OF the element on the page\n * - children => All other children will be redered inside the component\n */\nclass Wiggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style : {}\n    }\n\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: \"1.1\",\n      speed: \"1000\",\n      transition: true,\n      axis: null,\n      reset: true\n    };\n\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = Object.assign({}, defaultSettings, this.props.options);\n    this.reverse = this.settings.reverse ? -1 : 1;\n\n    // Events\n    this.onMouseEnter = this.onMouseEnter.bind(this, this.props.onMouseEnter);\n    this.onMouseMove = this.onMouseMove.bind(this, this.props.onMouseMove);\n    this.onMouseLeave = this.onMouseLeave.bind(this, this.props.onMouseLeave);\n  }\n\n  // After component mount select the element on the page\n  componentDidMount() {\n    this.element = document.getElementById(this.props.elementId);\n  }\n\n  // Before component mount clear timeout and animation frames\n  componentWillUnmount() {\n    clearTimeout(this.transitionTimeout);\n    cancelAnimationFrame(this.updateCall);\n  }\n\n  // Update element styles on mouse enter\n  onMouseEnter(cb = () => {}, e) {\n    this.updateElementPosition();\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        willChange : 'transform'\n      }\n    }))\n\n    this.setTransition();\n\n    return cb(e)\n  }\n\n  // Reset transform styles\n  reset() {\n    window.requestAnimationFrame(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n\n          transform : `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n        }\n      }))\n    });\n  }\n\n  // Get animation frame on mouse move\n  onMouseMove(cb = () => {}, e) {\n    e.persist();\n\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n\n    return cb(e);\n  }\n\n  // Set the setting during mouse enter and leave\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        transition : `${this.settings.speed}ms ${this.settings.easing}`\n      }\n    }))\n\n    this.transitionTimeout = setTimeout(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transition: ''\n        }\n      }))\n    }, this.settings.speed);\n  }\n\n  // Reset setting on mouse leave\n  onMouseLeave(cb = () => {}, e) {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      this.reset();\n    }\n    return cb(e)\n  }\n\n  // Get values during the event\n  getValues(e) {\n    const x = (e.nativeEvent.clientX - this.left) / this.width;\n    const y = (e.nativeEvent.clientY - this.top) / this.height;\n    const _x = Math.min(Math.max(x, 0), 1);\n    const _y = Math.min(Math.max(y, 0), 1);\n\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n\n    const percentageX =  _x * 100\n    const percentageY = _y * 100\n\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n\n  // Update element position\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  // Update the style for the element\n  update(e) {\n    let values = this.getValues(e);\n\n    this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transform: `perspective(${this.settings.perspective}px)\n                      rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg)\n                      rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg)\n                      scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\n        }\n      }))\n\n    this.updateCall = null;\n  }\n  \n  render() {\n    const style = Object.assign({}, this.props.style, this.state.style)\n    return (\n      <div style={style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseMove={this.onMouseMove}\n        onMouseLeave={this.onMouseLeave}\n        options={{ max : 25 }}\n        >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Wiggle;\n","import React from 'react';\nimport ImageCard from '../ImageCard/ImageCard';\nimport Wiggle from '..//Wiggle/Wiggle';\n\nconst ImageList = ({ images , onResubmit}) => {\n  return (\n    <div className='images-container'>\n      {\n        images.map(image => {\n          return (\n            <Wiggle\n              key={image.id}\n              elementId= {`ImageCard-${image.id}`}>\n                <ImageCard\n                  key={image.id}\n                  id={image.id}\n                  url={image.url}\n                  onResubmit={onResubmit}\n                />\n            </Wiggle>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default ImageList;\n","import React from 'react';\n\nconst ProfileGreet = ({ entries }) => {\n  if (entries > 0) {\n    return (\n        <div>\n          <p>Thank you for using the app {entries} times so far!!</p> \n          <h3>The following images were submitted by you:</h3>\n          <p>Note: Some images might have been submitted multipale times</p>\n        </div>) \n  } else {\n    return <h3>You haven't submitted any images yet..</h3>;\n  }\n}\n\nexport default ProfileGreet;\n","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.container = document.getElementById('modal-root');\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    this.container.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    this.container.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport avatarOne from '../../images/FaceOne.svg';\nimport avatarTwo from '../../images/FaceTwo.svg';\nimport avatarThree from '../../images/FaceThree.svg';\nimport avatarFour from '../../images/FaceFour.svg';\n\nconst getAvatar = (avatarId) => {\n  switch(avatarId) {\n    case 'avatarOne':\n      return avatarOne;\n    case 'avatarTwo':\n      return avatarTwo;\n    case 'avatarThree':\n      return avatarThree;\n    case 'avatarFour':\n      return avatarFour;\n    default:\n      return avatarOne;\n  }      \n}\n\nconst AvatarImage = ({ avatarId }) => {\n  return (\n    <img\n      src={getAvatar(avatarId)}\n      className='avatar-img' alt='avatar'\n      />\n  );\n}\n\nexport default AvatarImage;\n","import React, { Component } from 'react';\nimport FormInput from '../FormFields/FormInput/FormInput';\nimport ProfileAvatar from '../ProfileAvatar/ProfileAvatar';\nimport AvatarImage from '../AvatarImage/AvatarImage';\nimport Preloader from '../Preloader/Preloader';\nimport { DATABASE } from '../../constants';\n\n\nclass ProfileModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.user.name,\n      avatar: this.props.user.avatar,\n      updateError: '',\n      loading: false\n    }\n  }\n\n  getJoinedDate = () => {\n    const joinedDate = new Date(this.props.user.joined);\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    return `${joinedDate.getDate()} ${monthNames[joinedDate.getMonth()]} ${joinedDate.getFullYear()}`\n  }\n\n  selectAvatar = (avatar) => {\n    this.setState({avatar: avatar});\n  }\n\n  // Set state on input change\n  onFieldChange = (event, term) => {\n    this.setState({[term]: event.target.value })\n  }\n  \n  // Validate user input and register the user\n  onSubmitUpdate = (e) => {\n    e.preventDefault();\n    const { name, avatar } = this.state;\n    this.setState({loading: true});\n\n    fetch(`${DATABASE}/profile/${this.props.user.id}`, {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': window.sessionStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name: name,\n        avatar: avatar\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if (user.id) {\n        this.props.loadUser(user);\n        this.setState({\n          name: user.name,\n          avatar: user.avatar,\n          updateError: '',\n          loading: false\n        });\n      } else {\n        this.setState({\n          updateError: user,\n          loading: false\n        });\n      }\n    })\n    .catch(err => {\n      this.setState({\n        updateError: 'Something went wrong please try again later',\n        loading: false\n      });\n    })\n  }\n\n  render() {\n    const { toggleModal, user, showRemoveButton } = this.props;\n    const { name, avatar } = this.state;\n    const updateError = this.state.updateError ? <p className='error-message'>{this.state.updateError}</p> : '';\n    const preload = this.state.loading ? <Preloader/> : '';\n    return (\n      <div className='profile-model'>\n        <article className='profile-container br3 pa4 ba dark-gray b--black-10 mv4 mw6 shadow-5'>\n          <span className='close-modal grow' onClick={toggleModal}>&times;</span>\n          <header>\n            <AvatarImage \n              avatarId={avatar}\n              toggleMenu={toggleModal}\n              />\n            <h1 className='profile-user-name'>{name}</h1>\n            <div className='profile-info'>\n              <p>Images submittes: {user.entries}</p>\n              <p>Member Since: {this.getJoinedDate()}</p>\n            </div>\n          </header>\n          <main>\n            <form>\n              <FormInput \n                label='Change your Name'\n                name='name'\n                type='text'\n                placeholder={name}\n                onChange={(e) => this.onFieldChange(e, 'name')}\n              />\n              <ProfileAvatar \n                title='Select a new Avatar:'\n                avatar={avatar}\n                selectAvatar={this.selectAvatar}\n              />\n              <div className='profile-buttons mt3'>\n                <input \n                  onClick={this.onSubmitUpdate}\n                  className='cta-button grow profile-button'\n                  type='submit'\n                  value='Save'\n                />\n                <button className='cta-button grow profile-button' onClick={toggleModal}>Cancel</button>\n              </div>\n              {updateError}\n            </form>\n          </main>\n          {showRemoveButton(user.email)}\n          {preload}\n        </article>\n      </div>\n    );\n  }\n  \n  \n}\n\nexport default ProfileModal;\n","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Popup.css';\n\nclass Popup extends Component {\n  constructor(props) {\n    super(props);\n    this.container = document.getElementById('pop-up-root');\n    this.el = document.createElement('div');\n    this.el.classList.add('pop-up-container');\n  }\n\n  componentDidMount() {\n    this.container.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    this.container.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Popup;\n","import React from 'react';\n\nconst PopUpMsg = ({ message, closePopUp }) => {\n  setTimeout(() => {\n    const closeBtn = document.querySelector('.close-pop-up')\n    if (closeBtn) {\n      closeBtn.click();\n    }\n  }, 8000);\n\n  return (\n    <div className='pop-up-message'>\n      <span \n        className='close-pop-up' \n        onClick={closePopUp}>&times;</span>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default PopUpMsg;\n","import React, { Component } from 'react';\nimport { DATABASE } from '../../constants';\n\nimport './Profile.css';\nimport ImageList from '../../components/ImageList/ImageList';\nimport Preloader from '../../components/Preloader/Preloader';\nimport ProfileGreet from '../../components/ProfileGreet/ProfileGreet';\nimport Modal from '../../components/Modal/Modal';\nimport ProfileModal from '../../components/ProfileModal/ProfileModal';\nimport PopUp from '../../components/PopUp/PopUp';\nimport PopUpMsg from '../../components/PopUpMsg/PopUpMsg';\n\nimport AvatarImage from '../../components/AvatarImage/AvatarImage';\n\n/**\n * User Profile\n * - Showes summary of how many times the user used the site\n * - Shows a list of previously submitted images\n * - Offers the option to resubmit past images\n * - Allowes the user to delete his/ hers profile from the database\n * \n * Required props:\n * - user => User from Redux state\n * - onRouteChange => Function to change route\n * - onResubmit => Function to handle resubmission of images\n */\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n      isProfileOpen: false,\n      popUpMsg: ''\n    }\n  }\n\n  // Fetch user submitted images from dtatebase\n  componentDidMount() {\n    this.getProfileImages();\n  }\n\n  // Get profile images\n  getProfileImages = () => {\n    return fetch(`${DATABASE}/profile-images/${this.props.user.id}`,{\n      method: 'get',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': window.sessionStorage.getItem('token')\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data !== 'Unauthorized' && data.length) {\n        this.setState({images: data})\n      }\n    })\n    .catch(err => console.log('Could not fetch images'));\n  }\n\n  // Resubmit an image from the profile page\n  onImageResubmit = (url) => {\n    this.props.onResubmitInput(url);\n    this.props.onRouteChange('home');\n    this.props.onImageChange('');\n    this.props.onImageError('');\n    this.props.onResubmitImageUrl(true);\n  }\n\n  // Delete the profile only in case profile is not 'Visitor'\n  onSubmitRemoval = () => {\n    fetch(`${DATABASE}/profile-removal/${this.props.user.id}`, {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': window.sessionStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        email: this.props.user.email,\n        id: this.props.user.id\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({popUpMsg: data});\n      window.sessionStorage.removeItem('token');\n      setTimeout(() => {\n        this.props.onRouteChange('signin')\n      }, 3000);\n    })\n    // .then(() => this.props.onRouteChange('signin'))\n    .catch(err => {\n      this.setState({popUpMsg: 'Unable to remove profile'});\n    });\n  }\n\n  onChangeProtected = () => {\n    this.setState({ popUpMsg: 'This profile is protected, you may not save changes' });\n  }\n\n  showRemoveButton = (email) => {\n    const protectedEmails = [\n      'visitor@gmail.com',\n      'tester@gmail.com'\n    ]\n    const protectedEmail = (protectedEmails.indexOf(email) > -1)\n\n    if (!protectedEmail) {\n      return (\n        <button \n          className='cta-button grow delete-profile-button'\n          onClick={this.onSubmitRemoval}\n        >Delete profile</button> \n      )\n    } else {\n      return (\n        <button \n          className='cta-button grow delete-profile-button'\n          onClick={this.onChangeProtected}\n        >Delete Profile</button>)\n    }\n  }\n\n  closePopUp = () => {\n    this.setState({ popUpMsg: ''});\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      ...this.state,\n      isProfileOpen: !prevState.isProfileOpen\n    }));\n  }\n\n  render() {\n    const { user } = this.props;\n    let images = user.entries > 0 ? \n      <Preloader /> : \n      <p>Go ahead and submit <span role='img' aria-label='Smirking Face'>😏</span></p>;\n    if (this.state.images.length) {\n      images = \n        <ImageList \n          images={this.state.images} \n          onResubmit={this.onImageResubmit}/>\n    } else {\n      images = <p>You are not authorized</p>\n    }\n\n    return(\n      <article className='profile pa4 mb4'>\n        <AvatarImage \n            avatarId={user.avatar}\n        />\n        <h1>Hi <span className='capitalize'>{user.name}</span></h1>\n        <ProfileGreet entries={user.entries} />\n        <button \n          className='cta-button grow'\n          onClick={this.toggleModal} >Edit your profile</button>\n        <section>\n          {images}\n        </section>\n        { this.state.isProfileOpen &&\n          <Modal>\n            <ProfileModal \n              showRemoveButton={this.showRemoveButton}\n              isProfileOpen={this.state.isProfileOpen}\n              toggleModal={this.toggleModal}\n              loadUser={this.props.loadUser}\n              user={user}\n            />\n          </Modal>\n        }\n        { this.state.popUpMsg &&\n          <PopUp>\n            <PopUpMsg\n            message={this.state.popUpMsg}\n            closePopUp={this.closePopUp}\n            />\n          </PopUp>\n        }\n      </article>\n    )\n  }\n}\n  \nexport default Profile;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { resubmitImageInput, resubmitImageUrl, setImageUrl, setImageUrlErr } from '../../actions';\n\nimport Profile from '../Profile/Profile';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userInformation.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onResubmitInput: (text) => dispatch(resubmitImageInput(text)),\n    onResubmitImageUrl: (bool) => dispatch(resubmitImageUrl(bool)),\n    onImageChange: (text) => dispatch(setImageUrl(text)),\n    onImageError: (text) => dispatch(setImageUrlErr(text))\n  }\n}\n\n/**\n * MainProfile container\n */\nclass MainProfile extends Component {\n  render() {\n    return <Profile { ...this.props } />;\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(MainProfile);\n"],"sourceRoot":""}