{"version":3,"sources":["components/ImageCard/ImageCard.js","components/Wiggle/Wiggle.js","components/ImageList/ImageList.js","components/ProfileGreet/ProfileGreet.js","containers/Profile/Profile.js","containers/MainProfile/MainProfile.js"],"names":["ImageCard","id","url","onResubmit","className","style","backgroundImage","onClick","Wiggle","props","state","width","height","left","top","transitionTimeout","updateCall","element","settings","Object","assign","reverse","max","perspective","easing","scale","speed","transition","axis","reset","options","onMouseEnter","bind","onMouseMove","onMouseLeave","this","document","getElementById","elementId","clearTimeout","cancelAnimationFrame","cb","e","updateElementPosition","setState","willChange","setTransition","window","requestAnimationFrame","transform","persist","event","update","setTimeout","x","nativeEvent","clientX","y","clientY","_x","Math","min","_y","tiltX","toFixed","tiltY","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","getValues","children","Component","ImageList","images","map","image","key","ProfileGreet","entries","Profile","getProfileImages","fetch","DATABASE","user","then","response","json","data","length","catch","err","console","log","onImageResubmit","onResubmitInput","onRouteChange","onImageChange","onImageError","onResubmitImageUrl","onSubmitRemoval","method","headers","body","JSON","stringify","email","alert","showRemoveButton","Preloader","role","aria-label","name","MainProfile","connect","userInformation","dispatch","text","resubmitImageInput","bool","resubmitImageUrl","setImageUrl","setImageUrlErr"],"mappings":"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","file":"static/js/4.5bd0dedd.chunk.js","sourcesContent":["import React from 'react';\nimport './ImageCard.css';\n\n/**\n * Image card to display submitted images with option to resubmit\n * \n * Required props:\n * - id => Image id for css selector\n * - url => Image url to display as background\n * - onResubmit => Function to resubmit the image \n */\nconst ImageCard = ({id, url, onResubmit}) => {\n  return (\n    <div id={`ImageCard-${id}`} className='ImageCard' style={{backgroundImage:`url(\"${url}\")`}}>\n      <button className='card-button' onClick={() => onResubmit(url)}>Resubmit</button>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React, { Component } from 'react';\n\n/**\n * Wiggle component\n * Used to adjust element prespective on hover\n * Has no content but it's children\n * \n * Required props:\n * - elementId => OF the element on the page\n * - children => All other children will be redered inside the component\n */\nclass Wiggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style : {}\n    }\n\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: \"1.1\",\n      speed: \"1000\",\n      transition: true,\n      axis: null,\n      reset: true\n    };\n\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = Object.assign({}, defaultSettings, this.props.options);\n    this.reverse = this.settings.reverse ? -1 : 1;\n\n    // Events\n    this.onMouseEnter = this.onMouseEnter.bind(this, this.props.onMouseEnter);\n    this.onMouseMove = this.onMouseMove.bind(this, this.props.onMouseMove);\n    this.onMouseLeave = this.onMouseLeave.bind(this, this.props.onMouseLeave);\n  }\n\n  // After component mount select the element on the page\n  componentDidMount() {\n    this.element = document.getElementById(this.props.elementId);\n  }\n\n  // Before component mount clear timeout and animation frames\n  componentWillUnmount() {\n    clearTimeout(this.transitionTimeout);\n    cancelAnimationFrame(this.updateCall);\n  }\n\n  // Update element styles on mouse enter\n  onMouseEnter(cb = () => {}, e) {\n    this.updateElementPosition();\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        willChange : 'transform'\n      }\n    }))\n\n    this.setTransition();\n\n    return cb(e)\n  }\n\n  // Reset transform styles\n  reset() {\n    window.requestAnimationFrame(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n\n          transform : `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n        }\n      }))\n    });\n  }\n\n  // Get animation frame on mouse move\n  onMouseMove(cb = () => {}, e) {\n    e.persist();\n\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n\n    return cb(e);\n  }\n\n  // Set the setting during mouse enter and leave\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        transition : `${this.settings.speed}ms ${this.settings.easing}`\n      }\n    }))\n\n    this.transitionTimeout = setTimeout(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transition: ''\n        }\n      }))\n    }, this.settings.speed);\n  }\n\n  // Reset setting on mouse leave\n  onMouseLeave(cb = () => {}, e) {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      this.reset();\n    }\n    return cb(e)\n  }\n\n  // Get values during the event\n  getValues(e) {\n    const x = (e.nativeEvent.clientX - this.left) / this.width;\n    const y = (e.nativeEvent.clientY - this.top) / this.height;\n    const _x = Math.min(Math.max(x, 0), 1);\n    const _y = Math.min(Math.max(y, 0), 1);\n\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n\n    const percentageX =  _x * 100\n    const percentageY = _y * 100\n\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n\n  // Update element position\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  // Update the style for the element\n  update(e) {\n    let values = this.getValues(e);\n\n    this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transform: `perspective(${this.settings.perspective}px)\n                      rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg)\n                      rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg)\n                      scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\n        }\n      }))\n\n    this.updateCall = null;\n  }\n  \n  render() {\n    const style = Object.assign({}, this.props.style, this.state.style)\n    return (\n      <div style={style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseMove={this.onMouseMove}\n        onMouseLeave={this.onMouseLeave}\n        options={{ max : 25 }}\n        >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Wiggle;\n","import React from 'react';\nimport ImageCard from '../ImageCard/ImageCard';\nimport Wiggle from '..//Wiggle/Wiggle';\n\nconst ImageList = ({ images , onResubmit}) => {\n  return (\n    <div>\n      {\n        images.map(image => {\n          return (\n            <Wiggle\n              key={image.id}\n              elementId= {`ImageCard-${image.id}`}>\n                <ImageCard\n                  key={image.id}\n                  id={image.id}\n                  url={image.url}\n                  onResubmit={onResubmit}\n                />\n            </Wiggle>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default ImageList;\n","import React from 'react';\n\nconst ProfileGreet = ({ entries }) => {\n  if (entries > 0) {\n    return (\n        <div>\n          <p>Thank you for using the app {entries} times so far!!</p> \n          <h3>The following images were submitted by you:</h3>\n          <p>Note: Some images might have been submitted multipale times</p>\n        </div>) \n  } else {\n    return <h3>You haven't submitted any images yet..</h3>;\n  }\n}\n\nexport default ProfileGreet;\n","import React, { Component } from 'react';\nimport { DATABASE } from '../../constants';\n\nimport './Profile.css';\nimport ImageList from '../../components/ImageList/ImageList';\nimport Preloader from '../../components/Preloader/Preloader';\nimport ProfileGreet from '../../components/ProfileGreet/ProfileGreet';\n\n/**\n * User Profile\n * - Showes summary of how many times the user used the site\n * - Shows a list of previously submitted images\n * - Offers the option to resubmit past images\n * - Allowes the user to delete his/ hers profile from the database\n * \n * Required props:\n * - user => User from Redux state\n * - onRouteChange => Function to change route\n * - onResubmit => Function to handle resubmission of images\n */\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: []\n    }\n  }\n\n  // Fetch user submitted images from dtatebase\n  componentDidMount() {\n    this.getProfileImages();\n  }\n\n  // Get profile images\n  getProfileImages = () => {\n    return fetch(`${DATABASE}/profile-images/${this.props.user.id}`)\n    .then(response => response.json())\n    .then(data => {\n      if(data.length) {\n        this.setState({images: data})\n      }\n    })\n    .catch(err => console.log('Could not fetch images'));\n  }\n\n  // Resubmit an image from the profile page\n  onImageResubmit = (url) => {\n    this.props.onResubmitInput(url);\n    this.props.onRouteChange('home');\n    this.props.onImageChange('');\n    this.props.onImageError('');\n    this.props.onResubmitImageUrl(true);\n  }\n\n  // Delete the profile only in case profile is not 'Visitor'\n  onSubmitRemoval = () => {\n    fetch(`${DATABASE}/profile-removal/${this.props.user.id}`, {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email: this.props.user.email,\n        id: this.props.user.id\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      alert(data);\n    })\n    .then(() => this.props.onRouteChange('signin'))\n    .catch(err => alert('Unable to remove profile'));\n  }\n\n  showRemoveButton = (id) => {\n    if (id !== 1) {\n      return (\n        <button \n        className='remove-button'\n        onClick={this.onSubmitRemoval}\n        >Delete your profile</button> \n      )\n    } else {\n      return <button className='remove-button'>You can not remove this profile</button>\n    }\n  }\n\n  render() {\n    const { user } = this.props;\n    let images = user.entries > 0 ? \n      <Preloader /> : \n      <p>Go ahead and submit <span role='img' aria-label='Smirking Face'>😏</span></p>;\n    if (this.state.images.length) {\n      images = \n        <ImageList \n          images={this.state.images} \n          onResubmit={this.onImageResubmit}/>\n    }\n\n    return(\n      <article className='profile pa4 mb4'>\n        <h1>Hi <span className='capitalize'>{user.name}</span></h1>\n        <ProfileGreet entries={user.entries} />\n        {this.showRemoveButton(user.id)}\n        <section className='images-container'>\n          {images}\n        </section>\n      </article>\n    )\n  }\n}\n  \nexport default Profile;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { resubmitImageInput, resubmitImageUrl, setImageUrl, setImageUrlErr } from '../../actions';\n\nimport Profile from '../Profile/Profile';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userInformation.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onResubmitInput: (text) => dispatch(resubmitImageInput(text)),\n    onResubmitImageUrl: (bool) => dispatch(resubmitImageUrl(bool)),\n    onImageChange: (text) => dispatch(setImageUrl(text)),\n    onImageError: (text) => dispatch(setImageUrlErr(text))\n  }\n}\n\n/**\n * MainProfile container\n */\nclass MainProfile extends Component {\n  render() {\n    return <Profile { ...this.props } />;\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(MainProfile);\n"],"sourceRoot":""}