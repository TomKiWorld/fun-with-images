{"version":3,"sources":["images/FaceOne.svg","images/FaceTwo.svg","images/FaceThree.svg","images/FaceFour.svg","components/ProfileAvatar/ProfileAvatar.js","containers/Register/Register.js"],"names":["module","exports","setclasses","text","avatar","ProfileAvatar","title","selectAvatar","className","src","avatarOne","alt","onClick","avatarTwo","avatarThree","avatarFour","Register","sanitize","string","map","replace","match","onFieldChange","event","term","setState","target","value","getUserData","id","token","fetch","DATABASE","method","headers","then","resp","json","user","email","props","loadUser","registerError","loading","onRouteChange","catch","err","console","log","onSubmitRegister","e","preventDefault","state","name","password","validName","validEmail","validPassword","nameError","test","emailError","passwordError","body","JSON","stringify","response","data","success","saveToken","userId","this","preload","label","type","onChange","extraClass","Component"],"mappings":"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","file":"static/js/4.71ab0594.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FaceOne.2fe015e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceTwo.94a805f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceThree.11ca4909.svg\";","module.exports = __webpack_public_path__ + \"static/media/FaceFour.3a91bf1c.svg\";","import React from 'react';\nimport avatarOne from '../../images/FaceOne.svg';\nimport avatarTwo from '../../images/FaceTwo.svg';\nimport avatarThree from '../../images/FaceThree.svg';\nimport avatarFour from '../../images/FaceFour.svg';\n\nimport './ProfileAvatar.css';\n\nconst setclasses = (text, avatar) => {\n  return text === avatar ? 'avatar-img hyve grow selected' : 'avatar-img hyve grow';\n}\n\nconst ProfileAvatar = ({ title, avatar, selectAvatar }) => {\n  return (\n    <div>\n      <p className='db fw6 lh-copy f6'>{title}</p>\n      <div className='profile-avatars'>\n        <img\n          className={setclasses('avatarOne', avatar)}\n          src={avatarOne}\n          alt='Avatar one'\n          onClick={() => selectAvatar('avatarOne')}\n        />\n        <img\n          className={setclasses('avatarTwo', avatar)}\n          src={avatarTwo} \n          alt='Avatar two'\n          onClick={() => selectAvatar('avatarTwo')}\n        />\n        <img\n          className={setclasses('avatarThree', avatar)}\n          src={avatarThree} \n          alt='Avatar three' \n          onClick={() => selectAvatar('avatarThree')}\n        />\n        <img\n          className={setclasses('avatarFour', avatar)}\n          src={avatarFour} \n          alt='Avatar four' \n          onClick={() => selectAvatar('avatarFour')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileAvatar;\n","import React, { Component } from 'react';\nimport FormInput from '../../components/FormFields/FormInput/FormInput';\nimport FormSubmit from '../../components/FormFields/FormSubmit/FormSubmit';\nimport Preloader from '../../components/Preloader/Preloader';\nimport ProfileAvatar from '../../components/ProfileAvatar/ProfileAvatar';\nimport { DATABASE } from '../../constants';\n\n/**\n * Register component\n * - Allows a user to register to the app by displaying a form\n * \n * Required props:\n * - loadUser => Functon to get user information from state\n * - onRouteChange => Function to change the state of route\n */\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      avatar: 'avatarOne',\n      nameError: '',\n      emailError: '',\n      passwordError: '',\n      registerError: '',\n      loading: false\n    }\n  }\n\n  // Sanitize user input\n  sanitize = (string) => {\n    const map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;',\n    };\n    const reg = /[&<>\"'/]/ig;\n    return string.replace(reg, (match)=>(map[match]));\n  }\n\n  // Set state on input change\n  onFieldChange = (event, term) => {\n    this.setState({[term]: event.target.value })\n  }\n\n  getUserData = (id, token) => {\n    return fetch(`${DATABASE}/profile/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': token\n      }\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      if (user && user.email) {\n        this.props.loadUser(user);\n        this.setState({\n          registerError: '',\n          loading: false\n        });\n        this.props.onRouteChange('home');    \n      } else {\n        this.setState({\n          registerError: user,\n          loading: false\n        });\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  // Validate user input and register the user\n  onSubmitRegister = (e) => {\n    e.preventDefault();\n    let {name, email, avatar, password } = this.state;\n    let validName = false;\n    let validEmail = false;\n    let validPassword = false;\n    const regexpEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (name !== '' ) {\n      name = this.sanitize(name)\n      this.setState({name: name})\n      validName = true\n      this.setState({nameError: ''});\n    } else {\n      this.setState({nameError: 'Please enter your name'});\n    }\n\n    if ((email !== '') && (regexpEmail.test(email))) {\n      validEmail = true\n      this.setState({emailError: ''});\n    } else {\n      this.setState({emailError: 'Please enter your email'});\n    }\n\n    if (password !== '' ) {\n      validPassword = true\n      this.setState({passwordError: ''});\n    } else {\n      this.setState({passwordError: 'Please enter your password'});\n    }  \n\n    if ( validName && validEmail && validPassword ) {\n      this.setState({loading: true})\n      fetch(`${DATABASE}/register`, {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          avatar: avatar,\n          password: password\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data && data.success === 'true') {\n          this.props.saveToken(data.token);\n          this.getUserData(data.userId, data.token);\n        }\n      })\n      .catch(err => {\n        this.setState({\n          registerError: 'Something went wrong please try again later',\n          loading: false\n        });\n      })\n    } else {\n      this.setState({registerError: 'Something went wrong'});\n    }\n  }\n\n  selectAvatar = (avatar) => {\n    this.setState({avatar: avatar});\n  }\n\n  render() {\n    const nameError = this.state.nameError ? <p className='error-message'>{this.state.nameError}</p> : '';\n    const emailError = this.state.emailError ? <p className='error-message'>{this.state.emailError}</p> : '';\n    const passwordError = this.state.passwordError ? <p className='error-message'>{this.state.passwordError}</p> : '';\n    const registerError = this.state.registerError ? <p className='error-message'>{this.state.registerError}</p> : '';\n    const preload = this.state.loading ? <Preloader/> : '';\n\n    return (\n      <article className='register ba dark-gray b--black-10 mv4 mw6 shadow-5 center'>\n        <form className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <h1 className='f1 fw6 ph0 mh0'>Register</h1>\n              <FormInput \n                label='Name'\n                name='name'\n                type='text'\n                onChange={(e) => this.onFieldChange(e, 'name')}\n              />\n              {nameError}\n              <FormInput \n                label='Email'\n                name='email-address'\n                type='email'\n                onChange={(e) => this.onFieldChange(e, 'email')}\n              />\n              {emailError}\n              <ProfileAvatar \n                title='Select your Avatar:'\n                avatar={this.state.avatar}\n                selectAvatar={this.selectAvatar}\n              />\n              <FormInput \n                label='Password'\n                name='password'\n                type='password'\n                onChange={(e) => this.onFieldChange(e, 'password')}\n              />\n              {passwordError}\n            </fieldset>\n            <FormSubmit\n              value='Register'\n              onClick={this.onSubmitRegister}\n              extraClass='register'\n            />\n            {registerError}\n          </div>\n        </form>\n        {preload}\n      </article>\n    );\n  }\n}\n\nexport default Register;\n"],"sourceRoot":""}