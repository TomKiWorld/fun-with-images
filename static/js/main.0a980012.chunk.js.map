{"version":3,"sources":["constants.js","actions.js","components/Preloader/Preloader.js","components/SuspenseLoad/SuspenseLoad.js","components/ProfileDropDown/ProfileDropDown.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Header/Header.js","containers/SignIn/SignIn.js","components/Footer/Footer.js","containers/MainPage/MainPage.js","containers/App.js","serviceWorker.js","reducers.js","index.js","components/FormFields/FormInput/FormInput.js","components/FormFields/FormSubmit/FormSubmit.js","components/Logo/funGif.gif"],"names":["DATABASE","CHANGE_INPUT_VALUE","SET_IMAGE_URL","SET_IMAGE_URL_ERROR","RESUBMIT_INPUT_VALUE","RESUBMIT_IMAGE_URL","CHANGE_USER","SET_USER_ENTRIES","setInputValue","text","type","payload","resubmitImageInput","resubmitImageUrl","bool","setImageUrl","setImageUrlErr","setUser","data","setEntries","user","count","Preloader","className","SuspenseLoad","props","fallback","children","ProfileDropDown","toggle","status","setState","dropdownOpen","prevState","showDropDown","onRouteChange","state","onMouseLeave","onClick","aria-expanded","this","Component","Navigation","isSignedIn","Logo","src","funImages","alt","Header","avatarId","SignIn","getUserData","id","token","fetch","method","headers","then","resp","json","email","loadUser","loading","loginError","catch","err","console","log","onFieldChange","event","term","target","value","onSubmitSignIn","e","password","preventDefault","body","JSON","stringify","response","userId","success","saveToken","signInEmail","signInPassword","window","sessionStorage","getItem","preload","action","FormInput","label","name","onChange","extraClass","FormSubmit","Footer","href","rel","FaceApp","React","lazy","Register","MainProfile","particlesOptions","particles","number","density","enable","value_area","initalState","route","MainPage","onInputChange","onUserLoad","removeItem","onImageChange","onImageError","saveAuthTokenInSession","setItem","renderContent","params","App","connect","userInformation","dispatch","Boolean","location","hostname","match","inputImageState","inputValue","imageUrl","imageUrlError","resubmit","initalUser","avatar","entries","joined","rootReducer","combineReducers","imageUrlInputValue","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","placeholder","onKeyUp","receivedClass","autocomplete","displayPlaceholder","htmlFor","autoComplete","module","exports"],"mappings":"wHAAA,gRAAO,IAAMA,EAAU,wBAIVC,EAAqB,qBACrBC,EAAgB,gBAChBC,EAAsB,sBACtBC,EAAuB,uBACvBC,EAAqB,qBAGrBC,EAAc,cACdC,EAAmB,oB,gCCZhC,yPAUaC,EAAgB,SAACC,GAC5B,MAAO,CACLC,KAAMT,IACNU,QAASF,IAIAG,EAAqB,SAACH,GACjC,MAAO,CACLC,KAAMN,IACNO,QAASF,IAIAI,EAAmB,SAACC,GAC/B,MAAO,CACLJ,KAAML,IACNM,QAASG,IAIAC,EAAc,SAACN,GAC1B,MAAO,CACLC,KAAMR,IACNS,QAASF,IAIAO,EAAiB,SAACP,GAC7B,MAAO,CACLC,KAAMP,IACNQ,QAASF,IAIAQ,EAAU,SAACC,GACtB,MAAO,CACLR,KAAMJ,IACNK,QAASO,IAIAC,EAAa,SAACC,EAAMC,GAC/B,MAAO,CACLX,KAAMH,IACNI,QAAS,CACPS,OACAC,Y,gCCzDN,2BAqBeC,IAfG,WAChB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,wB,4PCJRC,EARM,SAACC,GACpB,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAACJ,EAAA,EAAD,OACjBG,EAAME,WCiDEC,G,yDAlDb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IAMRI,OAAS,SAACC,GACJA,EACF,EAAKC,SAAS,CAACC,aAAcF,IAE7B,EAAKC,UAAS,SAAAE,GAAS,MAAK,CAC1BD,cAAeC,EAAUD,kBAZZ,EAiBnBE,aAAe,WAAO,IACZC,EAAmB,EAAKV,MAAxBU,cACR,GAAI,EAAKC,MAAMJ,aACb,OACE,yBACET,UAAU,gBACVc,aAAc,kBAAM,EAAKR,QAAO,KAE9B,4BACE,wBAAIS,QAAS,kBAAMH,EAAc,UAAjC,QACA,wBAAIG,QAAS,kBAAMH,EAAc,aAAjC,gBACA,wBAAIG,QAAS,kBAAMH,EAAc,YAAjC,eA1BV,EAAKC,MAAQ,CACXJ,cAAc,GAHC,E,qDAoCjB,OACE,yBAAKT,UAAU,wBACb,yBAAKgB,gBAAeC,KAAKJ,MAAMJ,cAC7B,uBACET,UAAU,OACVe,QAASE,KAAKX,QAFhB,WAKDW,KAAKN,oB,GA7CgBO,cC4BfC,EAtBI,SAAC,GAAmC,IAAjCP,EAAgC,EAAhCA,cACpB,OADoD,EAAjBQ,WAG/B,yBAAKpB,UAAU,gBACb,kBAAC,EAAD,CACEY,cAAeA,KAKnB,yBAAKZ,UAAU,gBACb,uBACEe,QAAS,kBAAMH,EAAc,WAC7BZ,UAAU,wCAFZ,WAGA,uBACEe,QAAS,kBAAMH,EAAc,aAC7BZ,UAAU,wCAFZ,c,0BCTOqB,EARF,WACX,OACE,yBAAKrB,UAAU,QACb,yBAAKsB,IAAKC,IAAWC,IAAI,WCYhBC,EAXA,SAAC,GAA4C,EAA1CC,SAA2C,IAAjCN,EAAgC,EAAhCA,WAAYR,EAAoB,EAApBA,cACtC,OACE,4BAAQZ,UAAU,eAChB,kBAAC,EAAD,CACEoB,WAAYA,EACZR,cAAeA,IACjB,kBAAC,EAAD,Q,+BC8ISe,E,kDAhJb,aAAe,IAAD,8BACZ,gBA4BFC,YAAc,SAACC,EAAIC,GACjB,OAAOC,MAAM,GAAD,OAAItD,IAAJ,oBAAwBoD,GAAM,CACxCG,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBH,KAGpBI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAArC,GACAA,GAAQA,EAAKwC,OACf,EAAKnC,MAAMoC,SAASzC,GACpB,EAAKW,SAAS,CAAC+B,SAAS,IACxB,EAAKrC,MAAMU,cAAc,SAEzB,EAAKJ,SAAS,CACZgC,WAAY3C,EACZ0C,SAAS,OAIdE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAlDd,EAsDdG,cAAgB,SAACC,EAAOC,GACtB,EAAKvC,SAAL,eAAgBuC,EAAOD,EAAME,OAAOC,SAvDxB,EA2DdC,eAAiB,SAACC,EAAGd,EAAOe,GAC1BD,EAAEE,iBACa,KAAVhB,GAA+B,KAAbe,GACrB,EAAK5C,SAAS,CAAC+B,SAAS,IACxBR,MAAM,GAAD,OAAItD,IAAJ,WAAuB,CAC1BuD,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BqB,KAAMC,KAAKC,UAAU,CACnBnB,MAAOA,EACPe,SAAUA,MAGblB,MAAK,SAAAuB,GAAQ,OAAIA,EAASrB,UAC1BF,MAAK,SAAAvC,GACAA,EAAK+D,QAA2B,SAAjB/D,EAAKgE,SACtBhB,QAAQC,IAAI,WAAYjD,EAAKmC,OAC7B,EAAK5B,MAAM0D,UAAUjE,EAAKmC,OAC1B,EAAKF,YAAYjC,EAAK+D,OAAQ/D,EAAKmC,QAEnC,EAAKtB,SAAS,CACZgC,WAAY7C,EACZ4C,SAAS,OAIdE,OAAM,SAAAC,GACL,EAAKlC,SAAS,CACZgC,WAAY,8CACZD,SAAS,QAIb,EAAK/B,SAAS,CAACgC,WAAY,8CAzF7B,EAAK3B,MAAQ,CACXgD,YAAa,GACbC,eAAgB,GAChBtB,WAAY,GACZD,SAAS,GANC,E,gEAUO,IAAD,OACZT,EAAQiC,OAAOC,eAAeC,QAAQ,SACzCnC,GACDC,MAAM,GAAD,OAAItD,IAAJ,WAAuB,CAC1BuD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiBH,KAGpBI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAvC,GACCA,GAAQA,EAAKkC,IAChB,EAAKD,YAAYjC,EAAKkC,GAAIC,Q,+BAwExB,IAAD,OACClB,EAAkBK,KAAKf,MAAvBU,cACF4B,EAAavB,KAAKJ,MAAM2B,WAAa,uBAAGxC,UAAU,iBAAiBiB,KAAKJ,MAAM2B,YAAkB,GAChG0B,EAAUjD,KAAKJ,MAAM0B,QAAU,kBAACxC,EAAA,EAAD,MAAe,GAEpD,OACE,6BAASC,UAAU,gEACjB,0BAAMA,UAAU,eAAemE,OAAO,KACpC,yBAAKnE,UAAU,WACb,8BAAU6B,GAAG,UAAU7B,UAAU,6BAC/B,wBAAIA,UAAU,kBAAd,WACA,kBAACoE,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,gBACLnF,KAAK,QACLoF,SAAU,SAACpB,GAAD,OAAO,EAAKN,cAAcM,EAAG,gBACvCqB,WAAW,eAEb,kBAACJ,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLnF,KAAK,WACLoF,SAAU,SAACpB,GAAD,OAAO,EAAKN,cAAcM,EAAG,mBACvCqB,WAAW,gBAGdhC,EACD,kBAACiC,EAAA,EAAD,CACExB,MAAM,UACNlC,QAAS,SAACoC,GAAD,OAAO,EAAKD,eAAeC,EAAG,EAAKtC,MAAMgD,YAAa,EAAKhD,MAAMiD,iBAC1EU,WAAW,WAEb,kBAACC,EAAA,EAAD,CACExB,MAAM,oBACNlC,QAAS,SAACoC,GAAD,OAAO,EAAKD,eAAeC,EAAG,oBAAqB,YAE9D,yBAAKnD,UAAU,eACb,uBACEe,QAAS,kBAAMH,EAAc,aAC7BZ,UAAU,gCAFZ,eAMLkE,O,GA3IYhD,aCDNwD,EARA,WACb,OACE,4BAAQ1E,UAAU,eAChB,wCAAa,wCAAb,OAAsC,uBAAG2E,KAAK,gCAAgC3B,OAAO,SAAS4B,IAAI,uBAA5D,iBCAtCC,EAASC,IAAMC,MAAK,kBAAM,iCAC1BC,EAAUF,IAAMC,MAAK,kBAAM,iCAC3BE,EAAaH,IAAMC,MAAK,kBAAM,iCAG9BG,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNnC,MAAO,GACPoC,QAAS,CACPC,QAAQ,EACRC,WAAY,QAOdC,EAAc,CAClBC,MAAO,SACPrE,YAAY,GAgGCsE,E,kDA5Fb,aAAe,IAAD,8BACZ,gBAKF9E,cAAgB,SAAC6E,GACH,SAAVA,GAAgC,YAAVA,EAAwB,EAAKjF,SAAS,CAACY,YAAY,IAAS,EAAKZ,SAAS,CAACY,YAAY,IACjG,WAAVqE,IACF,EAAKjF,SAASgF,GACd,EAAKtF,MAAMyF,cAAc,IACzB,EAAKzF,MAAM0F,WAAW,IACtB7B,OAAOC,eAAe6B,WAAW,UAErB,SAAVJ,IACF,EAAKvF,MAAM4F,cAAc,IACzB,EAAK5F,MAAM6F,aAAa,KAE1B,EAAKvF,SAAS,CAACiF,MAAOA,KAlBV,EAsBdO,uBAAyB,SAAClE,GACxBiC,OAAOC,eAAeiC,QAAQ,QAASnE,IAvB3B,EA0BdoE,cAAgB,SAACT,GACf,OAAOA,GACL,IAAK,SACH,OACE,kBAAC,EAAD,CACEnD,SAAU,EAAKpC,MAAM0F,WACrBhF,cAAe,EAAKA,cACpBgD,UAAW,EAAKoC,yBAGtB,IAAK,OACH,OACE,kBAAC,EAAD,KACE,kBAACnB,EAAD,OAGN,IAAK,WACH,OACE,kBAAC,EAAD,KACE,kBAACG,EAAD,CACE1C,SAAU,EAAKpC,MAAM0F,WACrBhF,cAAe,EAAKA,cACpBgD,UAAW,EAAKoC,0BAIxB,IAAK,UACH,OACE,kBAAC,EAAD,KACE,kBAACf,EAAD,CACE3C,SAAU,EAAKpC,MAAM0F,WACrBhF,cAAe,EAAKA,iBAI5B,QACE,OACE,kBAAC,EAAD,CACE0B,SAAU,EAAKpC,MAAM0F,WACrBhF,cAAe,EAAKA,cACpBgD,UAAW,EAAKoC,2BAhExB,EAAKnF,MAAQ2E,EAFD,E,qDAwEJ,IAAD,EACuBvE,KAAKJ,MAA3BO,EADD,EACCA,WAAYqE,EADb,EACaA,MAEpB,OACE,yBAAKzF,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,YACVmG,OAAQjB,IAEV,kBAAC,EAAD,CACE9D,WAAYA,EACZR,cAAeK,KAAKL,gBAEpBK,KAAKiF,cAAcT,GACrB,kBAAC,EAAD,W,GAvFevE,aCRjBkF,E,uKAEF,OAAO,kBAAC,EAAcnF,KAAKf,W,GAFbgB,aAMHmF,eArBS,SAACxF,GACvB,MAAO,CACLhB,KAAMgB,EAAMyF,gBAAgBzG,SAIL,SAAC0G,GAC1B,MAAO,CACLZ,cAAe,SAACzG,GAAD,OAAUqH,EAAStH,YAAcC,KAChD4G,cAAe,SAAC5G,GAAD,OAAUqH,EAAS/G,YAAYN,KAC9C6G,aAAc,SAAC7G,GAAD,OAAUqH,EAAS9G,YAAeP,KAChD0G,WAAY,SAACjG,GAAD,OAAU4G,EAAS7G,YAAQC,QAU5B0G,CAA6CD,GCjBxCI,QACW,cAA7BzC,OAAO0C,SAASC,UAEe,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACvB,2D,WCRAC,EAAkB,CACtBC,WAAY,GACZC,SAAU,GACVC,cAAe,GACfC,UAAU,GAoBNC,EAAa,CACjBpH,KAAM,CACJgC,GAAI,GACJyC,KAAM,GACNjC,MAAO,GACP6E,OAAQ,YACRC,QAAS,EACTC,OAAQ,KC/BNC,G,cAAcC,YAAgB,CAAEC,mBDOJ,WAAuC,IAAtC1G,EAAqC,uDAA/B+F,EAAiBzC,EAAc,uDAAP,GAC/D,OAAOA,EAAOhF,MACZ,KAAKT,IAEL,KAAKG,IACH,OAAO,2BAAKgC,GAAZ,IAAmBgG,WAAY1C,EAAO/E,UACxC,KAAKN,IACH,OAAO,2BAAK+B,GAAZ,IAAmBmG,SAAU7C,EAAO/E,UACtC,KAAKT,IACH,OAAO,2BAAKkC,GAAZ,IAAmBiG,SAAU3C,EAAO/E,UACtC,KAAKR,IACH,OAAO,2BAAKiC,GAAZ,IAAmBkG,cAAe5C,EAAO/E,UAC3C,QACE,OAAOyB,ICpB6CyF,gBDmC3B,WAAkC,IAAjCzF,EAAgC,uDAA1BoG,EAAY9C,EAAc,uDAAP,GACvD,OAAOA,EAAOhF,MACZ,KAAKJ,IACH,GAAIoF,EAAO/E,SAAW+E,EAAO/E,QAAQyC,GAAI,CACvC,IAAMhC,EAAOsE,EAAO/E,QACpB,OAAO,2BACFyB,GADL,IACYhB,KAAM,CACdgC,GAAIhC,EAAKgC,GACTyC,KAAMzE,EAAKyE,KACXjC,MAAOxC,EAAKwC,MACZ8E,QAAStH,EAAKsH,QACdD,OAAQrH,EAAKqH,OACbE,OAAQvH,EAAKuH,UAInB,OAAOvG,EACT,KAAK7B,IACF,IAAMa,EAAOsE,EAAO/E,QAAQS,KAC3B,OAAO,2BACFgB,GADL,IACYhB,KAAM,CACdgC,GAAIhC,EAAKgC,GACTyC,KAAMzE,EAAKyE,KACXjC,MAAOxC,EAAKwC,MACZ8E,QAAShD,EAAO/E,QAAQU,MACxBoH,OAAQrH,EAAKqH,OACbE,OAAQvH,EAAKuH,UAGrB,QACE,OAAOvG,OChEP2G,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASC,eAAe,SFgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEd1F,OAAM,SAAA2F,GACLzF,QAAQyF,MAAMA,EAAMC,a,gCGzI5B,oBAoDejE,IArCG,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,KAAMnF,EAAsD,EAAtDA,KAAMmJ,EAAgD,EAAhDA,YAAa/D,EAAmC,EAAnCA,SAAUgE,EAAyB,EAAzBA,QAAS/D,EAAgB,EAAhBA,WAC/DgE,EAAa,OAAEhE,QAAF,IAAEA,IAAc,GAC/BiE,EAAe,GACnB,OAAOnE,GACL,IAAK,WACHmE,EAAe,mBACf,MACF,IAAK,gBACHA,EAAe,QACf,MACF,IAAK,OACHA,EAAe,OACf,MACF,QACEA,EAAe,GAGnB,IAAMC,EAAqBJ,GAA4B,GAEvD,OACE,yBAAKtI,UAAU,OACb,2BAAOA,UAAU,oBAAoB2I,QAASxJ,GAAOkF,EACnD,2BACEE,SAAUA,EACVgE,QAASA,EACTvI,UAAS,UAAKwI,EAAL,iEACTrJ,KAAMA,EACNmF,KAAMA,EACNgE,YAAaI,EACb7G,GAAIyC,EACJsE,aAAcH,Q,gCC7CxB,oBA2BehE,IAdI,SAAC,GAAkC,IAAjCxB,EAAgC,EAAhCA,MAAOlC,EAAyB,EAAzBA,QAASyD,EAAgB,EAAhBA,WAC7BgE,EAAa,OAAEhE,QAAF,IAAEA,IAAc,GACnC,OACE,yBAAKxE,UAAU,OACb,2BACEe,QAASA,EACTf,UAAS,UAAKwI,EAAL,yEACTrJ,KAAK,SACL8D,MAAOA,O,mBCrBf4F,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.0a980012.chunk.js","sourcesContent":["export const DATABASE ='http://localhost:3000';\n// export const DATABASE ='https://fierce-oasis-21316.herokuapp.com';\n\n// Image url setup\nexport const CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE';\nexport const SET_IMAGE_URL = 'SET_IMAGE_URL';\nexport const SET_IMAGE_URL_ERROR = 'SET_IMAGE_URL_ERROR';\nexport const RESUBMIT_INPUT_VALUE = 'RESUBMIT_INPUT_VALUE';\nexport const RESUBMIT_IMAGE_URL = 'RESUBMIT_IMAGE_URL';\n\n// User information\nexport const CHANGE_USER = 'CHANGE_USER';\nexport const SET_USER_ENTRIES = 'SET_USER_ENTRIES';\n","import {\n  CHANGE_INPUT_VALUE,\n  RESUBMIT_INPUT_VALUE,\n  RESUBMIT_IMAGE_URL,\n  SET_IMAGE_URL,\n  SET_IMAGE_URL_ERROR,\n  CHANGE_USER,\n  SET_USER_ENTRIES\n} from './constants';\n\nexport const setInputValue = (text) => {\n  return {\n    type: CHANGE_INPUT_VALUE,\n    payload: text\n  }\n};\n\nexport const resubmitImageInput = (text) => {\n  return {\n    type: RESUBMIT_INPUT_VALUE,\n    payload: text\n  }\n};\n\nexport const resubmitImageUrl = (bool) => {\n  return {\n    type: RESUBMIT_IMAGE_URL,\n    payload: bool\n  }\n};\n\nexport const setImageUrl = (text) => {\n  return {\n    type: SET_IMAGE_URL,\n    payload: text\n  }\n};\n\nexport const setImageUrlErr = (text) => {\n  return {\n    type: SET_IMAGE_URL_ERROR,\n    payload: text\n  }\n};\n\nexport const setUser = (data) => {\n  return {\n    type: CHANGE_USER,\n    payload: data\n  }\n};\n\nexport const setEntries = (user, count) => {\n  return {\n    type: SET_USER_ENTRIES,\n    payload: {\n      user,\n      count\n    }\n  }\n};\n","import React from 'react';\nimport './Preloader.css';\n\n/**\n * Site Preloader\n */\nconst Preloader = () => {\n  return (\n    <div className=\"Preloader\">\n      <div className=\"Preloader__holder\">\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__ball\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;\n","import React, { Suspense } from 'react';\nimport Preloader from '../Preloader/Preloader';\n\nconst SuspenseLoad = (props) => {\n  return (\n    <Suspense fallback={<Preloader />}>\n      {props.children}\n    </Suspense>\n  );\n}\n\nexport default SuspenseLoad;\n","import React, { Component } from 'react';\n\nimport './ProfileDropDown.css';\n\nclass ProfileDropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle = (status) => {\n    if (status) {\n      this.setState({dropdownOpen: status})\n    } else {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    }\n  }\n\n  showDropDown = () => {\n    const { onRouteChange  } = this.props;\n    if (this.state.dropdownOpen) {\n      return (\n        <div \n          className='nav-drop-down'\n          onMouseLeave={() => this.toggle(false)}\n           >\n            <ul>\n              <li onClick={() => onRouteChange('home')} >Home</li>\n              <li onClick={() => onRouteChange('profile')} >View Profile</li>\n              <li onClick={() => onRouteChange('signin')} >Sign out</li>\n            </ul>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (      \n      <div className='profile-drop-down tc'>\n        <div aria-expanded={this.state.dropdownOpen}>\n          <p\n            className='menu'\n            onClick={this.toggle}\n            >≡</p>\n        </div>\n        {this.showDropDown()}\n      </div>\n    )\n  }\n}\n\nexport default ProfileDropDown;\n","import React from 'react';\nimport ProfileDropDown from '../ProfileDropDown/ProfileDropDown';\n\n/**\n * Site navigation\n * \n * Required props:\n * - onRouteChange => Function to change the state of route\n * - isSignedIn => State to show relative links\n */\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav className='main-nav end'>\n        <ProfileDropDown\n          onRouteChange={onRouteChange} />\n      </nav>\n    )\n  } else {\n    return(\n      <nav className='main-nav end'>\n        <p \n          onClick={() => onRouteChange('signin')}\n          className='link dim black underline pa3 pointer'>Sign in</p>\n        <p \n          onClick={() => onRouteChange('register')}\n          className='link dim black underline pa3 pointer'>Register</p>\n      </nav>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Logo.css';\nimport funImages from './funGif.gif';\n\n/**\n * Site logo\n */\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <img src={funImages} alt='logo'/>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport Logo from '../Logo/Logo';\n\n/**\n * Site header \n * \n * Required props:\n * - isSignedIn => In order to dispaly the correct naviagtion from state\n * - onRouteChange => Function to change route state\n */\nconst Header = ({ avatarId, isSignedIn, onRouteChange }) => {\n  return (\n    <header className='site-header'>\n      <Navigation\n        isSignedIn={isSignedIn}\n        onRouteChange={onRouteChange} />\n      <Logo />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport FormInput from '../../components/FormFields/FormInput/FormInput';\nimport FormSubmit from '../../components//FormFields/FormSubmit/FormSubmit';\nimport Preloader from '../../components/Preloader/Preloader';\nimport { DATABASE } from '../../constants';\n\n/**\n * Sign In component\n * - Allows a user to sign in to the app by displaying a form\n * \n * Required props:\n * - loadUser => Functon to get user information from state\n * - onRouteChange => Function to change the state of route\n */\nclass SignIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n      loginError: '',\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n    if(token) {\n      fetch(`${DATABASE}/signin`, {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': token\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        if ( data && data.id) {\n          this.getUserData(data.id, token);\n        }\n      })\n    }\n  }\n\n  getUserData = (id, token) => {\n    return fetch(`${DATABASE}/profile/${id}`, {\n      method: 'get',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': token\n      }\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      if (user && user.email) {\n        this.props.loadUser(user);\n        this.setState({loading: false});\n        this.props.onRouteChange('home');    \n      } else {\n        this.setState({\n          loginError: user,\n          loading: false\n        });\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  // Set state on input change\n  onFieldChange = (event, term) => {\n    this.setState({[term]: event.target.value })\n  }\n\n  // Sign in \n  onSubmitSignIn = (e, email, password) => {\n    e.preventDefault();\n    if ((email !== '') && (password !== '')) {\n      this.setState({loading: true})\n      fetch(`${DATABASE}/signin`, {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.userId && data.success === 'true') {\n          console.log('all good', data.token)\n          this.props.saveToken(data.token);\n          this.getUserData(data.userId, data.token);\n        } else {\n          this.setState({\n            loginError: data,\n            loading: false\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loginError: 'Something went wrong please try again later',\n          loading: false\n        });\n      })\n    } else {\n      this.setState({loginError: 'Please make sure both fields are entered'});\n    }\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    const loginError = this.state.loginError ? <p className='error-message'>{this.state.loginError}</p> : '';\n    const preload = this.state.loading ? <Preloader/> : '';\n\n    return (\n      <article className='sign-in br3 ba dark-gray b--black-10 mv4 mw6 shadow-5 center'>\n        <form className='pa4 black-80' action='/'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <h1 className='f1 fw6 ph0 mh0'>Sign In</h1>\n              <FormInput \n                label='Email'\n                name='email-address'\n                type='email'\n                onChange={(e) => this.onFieldChange(e, 'signInEmail')}\n                extraClass='inputField'\n              />\n              <FormInput \n                label='Password'\n                name='password'\n                type='password'\n                onChange={(e) => this.onFieldChange(e, 'signInPassword')}\n                extraClass='inputField'\n              />\n            </fieldset>\n            {loginError}\n            <FormSubmit\n              value='Sign in'\n              onClick={(e) => this.onSubmitSignIn(e, this.state.signInEmail, this.state.signInPassword)}\n              extraClass='signIn'\n            />\n            <FormSubmit\n              value='Log in as Visitor'\n              onClick={(e) => this.onSubmitSignIn(e, 'visitor@gmail.com', 'visit')}\n            />\n            <div className='lh-copy mt3'>\n              <p \n                onClick={() => onRouteChange('register')}\n                className='f6 link dim black db pointer'>Register</p>\n            </div>\n          </div>\n        </form>\n        {preload}\n      </article>\n    );\n  }  \n}\n\nexport default SignIn;\n","import React from 'react';\n\n/**\n * Site footer\n */\nconst Footer = () => {\n  return (\n    <footer className='site-footer'>\n      <p>Made with <span>&hearts;</span> by <a href='https://github.com/TomKiWorld' target='_blank' rel='noopener noreferrer'>TomKiWorld</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Particles from 'react-particles-js';\nimport SuspenseLoad from '../../components/SuspenseLoad/SuspenseLoad';\nimport Header from '../../components/Header/Header';\nimport SignIn from '../SignIn/SignIn';\nimport Footer from '../../components/Footer/Footer';\n\nconst FaceApp= React.lazy(() => import('../FaceApp/FaceApp'));\nconst Register= React.lazy(() => import('../Register/Register'));\nconst MainProfile= React.lazy(() => import('../MainProfile/MainProfile'));\n\n// Options for the particals component\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n}\n\n// Initiale state for reset during logout\nconst initalState = {\n  route: 'signin',\n  isSignedIn: false\n}\n\nclass MainPage extends Component {\n  constructor() {\n    super();\n    this.state = initalState;\n  }\n\n  // Change the route state\n  onRouteChange = (route) => {\n    ((route === 'home') || (route === 'profile')) ? this.setState({isSignedIn: true}) : this.setState({isSignedIn: false});\n    if (route === 'signin') {\n      this.setState(initalState);\n      this.props.onInputChange('');\n      this.props.onUserLoad({});\n      window.sessionStorage.removeItem('token');\n    }\n    if (route === 'home') {\n      this.props.onImageChange('');\n      this.props.onImageError('');\n    }\n    this.setState({route: route})\n  }\n\n  // Save JWT Token\n  saveAuthTokenInSession = (token) => {\n    window.sessionStorage.setItem('token', token);\n  }\n\n  renderContent = (route) => {\n    switch(route) {\n      case 'signin':\n        return (\n          <SignIn\n            loadUser={this.props.onUserLoad}\n            onRouteChange={this.onRouteChange}\n            saveToken={this.saveAuthTokenInSession}\n          />\n        );\n      case 'home':\n        return (\n          <SuspenseLoad>\n            <FaceApp />\n          </SuspenseLoad>\n        );\n      case 'register':\n        return (\n          <SuspenseLoad>\n            <Register \n              loadUser={this.props.onUserLoad}\n              onRouteChange={this.onRouteChange}\n              saveToken={this.saveAuthTokenInSession}\n            />\n          </SuspenseLoad>\n        );\n      case 'profile':\n        return (\n          <SuspenseLoad>\n            <MainProfile\n              loadUser={this.props.onUserLoad}\n              onRouteChange={this.onRouteChange}\n            />\n          </SuspenseLoad>\n        );\n      default:\n        return (\n          <SignIn \n            loadUser={this.props.onUserLoad}\n            onRouteChange={this.onRouteChange}\n            saveToken={this.saveAuthTokenInSession}\n          />\n        );\n    }\n  }\n\n  render() {\n    const { isSignedIn, route } = this.state;\n\n    return (\n      <div className='App'>\n        <Particles\n          className='particles' \n          params={particlesOptions}\n        />\n        <Header \n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n          />\n        { this.renderContent(route)}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setInputValue, setImageUrl, setImageUrlErr, setUser } from '../actions';\n\nimport './App.css';\n\nimport MainPage from './MainPage/MainPage';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userInformation.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputChange: (text) => dispatch(setInputValue(text)),\n    onImageChange: (text) => dispatch(setImageUrl(text)),\n    onImageError: (text) => dispatch(setImageUrlErr(text)),\n    onUserLoad: (data) => dispatch(setUser(data))\n  }\n}\n\nclass App extends Component {\n  render() {\n    return <MainPage { ...this.props } />;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CHANGE_INPUT_VALUE,\n  SET_IMAGE_URL,\n  SET_IMAGE_URL_ERROR,\n  RESUBMIT_INPUT_VALUE,\n  RESUBMIT_IMAGE_URL,\n  CHANGE_USER,\n  SET_USER_ENTRIES\n} from './constants';\n\nconst inputImageState = {\n  inputValue: '',\n  imageUrl: '',\n  imageUrlError: '',\n  resubmit: false\n}\n\nexport const imageUrlInputValue = (state=inputImageState, action={}) => {\n  switch(action.type){\n    case CHANGE_INPUT_VALUE : \n      return { ...state, inputValue: action.payload };\n    case RESUBMIT_INPUT_VALUE :\n      return { ...state, inputValue: action.payload };\n    case RESUBMIT_IMAGE_URL :\n      return { ...state, resubmit: action.payload };\n    case SET_IMAGE_URL :\n      return { ...state, imageUrl: action.payload };\n    case SET_IMAGE_URL_ERROR :\n      return { ...state, imageUrlError: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst initalUser = {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    avatar: 'avatarOne',\n    entries: 0,\n    joined: ''\n  }\n}\n\nexport const userInformation = (state=initalUser, action={}) => {\n  switch(action.type) {\n    case CHANGE_USER:\n      if (action.payload && action.payload.id) {\n        const user = action.payload;\n        return {\n          ...state, user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            entries: user.entries,\n            avatar: user.avatar,\n            joined: user.joined\n          }\n        }\n      };\n      return state;\n    case SET_USER_ENTRIES:\n       const user = action.payload.user\n        return {\n          ...state, user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            entries: action.payload.count,\n            avatar: user.avatar,\n            joined: user.joined\n          }\n        };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { imageUrlInputValue, userInformation } from './reducers';\nimport 'tachyons';\nimport './index.css';\n\nconst rootReducer = combineReducers({ imageUrlInputValue, userInformation });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\n\n/**\n * Form input field\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - label => Displayed name\n * - name => For the is and label for\n * - type => Field type\n * - onChange => Function on input change\n * - onKeyUp => Function on key up - enter detection\n * Optional props:\n * - extraClass => For classlist \n */\nconst FormInput = ({label, name, type, placeholder, onChange, onKeyUp, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  let autocomplete = ''\n  switch(name) {\n    case 'password':\n      autocomplete = 'current-password';\n      break;\n    case 'email-address':\n      autocomplete = 'email';\n      break;\n    case 'name':\n      autocomplete = 'name';\n      break;\n    default:\n      autocomplete = '';\n  }\n\n  const displayPlaceholder = placeholder ? placeholder : '';\n\n  return (\n    <div className='mt3'>\n      <label className='db fw6 lh-copy f6' htmlFor={type}>{label}\n        <input \n          onChange={onChange}\n          onKeyUp={onKeyUp}\n          className={`${receivedClass} pa2 input-reset ba b--black hover-bg-black hover-white w-100`} \n          type={type} \n          name={name}\n          placeholder={displayPlaceholder}\n          id={name} \n          autoComplete={autocomplete}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default FormInput;\n","import React from 'react';\n\n/**\n * Form submit\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - value => Displayed name\n * - type => Field type\n * - onClick => Function on button click\n * Optional props:\n * - extraClass => For classlist\n */\nconst FormSubmit = ({value, onClick, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  return (\n    <div className='mt3'>\n      <input \n        onClick={onClick}\n        className={`${receivedClass} b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib`} \n        type='submit'\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default FormSubmit;\n","module.exports = __webpack_public_path__ + \"static/media/funGif.d1e0a335.gif\";"],"sourceRoot":""}