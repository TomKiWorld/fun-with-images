{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Header/Header.js","components/FormFields/FormInput/FormInput.js","components/FormFields/FormSubmit/FormSubmit.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Greet/Greet.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/ColorList/ColorList.js","components/FaceApp/FaceApp.js","components/ImageCard/ImageCard.js","components/Wiggle/Wiggle.js","components/Profile/Profile.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js","components/Logo/funGif.gif","components/FaceRecognition/colorsIcon.svg"],"names":["Navigation","onRouteChange","isSignedIn","mainLink","route","onClick","className","Logo","src","funImages","alt","Header","FormInput","label","name","type","onChange","onKeyUp","extraClass","receivedClass","autocomplete","htmlFor","id","autoComplete","FormSubmit","value","SignIn","props","handleKeyUp","e","keyCode","document","querySelector","click","onEmailChange","event","setState","signInEmail","target","onPasswordChange","signInPassword","onSubmitSignIn","preventDefault","state","fetch","database","method","headers","body","JSON","stringify","email","password","then","response","json","user","loadUser","loginError","onSubmitVisitor","this","action","Component","Register","sanitize","string","map","replace","match","onNameChange","onSubmitRegister","validName","validEmail","validPassword","nameError","test","emailError","passwordError","registerError","Greet","entries","greet","ImageLinkForm","onInputChange","onButtonSubmit","imageUrlError","inputValue","FaceRecognition","imageUrl","onShowClick","imgBlock","colorsView","colorsIcon","ColorList","colors","showColor","display","colorText","length","list","color","hex","key","style","backgroundColor","FaceApp","userName","onImageUrlSubmit","boxes","toggleColorList","showColorList","ImageCard","url","onResubmit","backgroundImage","Wiggle","width","height","left","top","transitionTimeout","updateCall","element","settings","Object","assign","reverse","max","perspective","easing","scale","speed","transition","axis","reset","options","onMouseEnter","bind","onMouseMove","onMouseLeave","getElementById","elementId","clearTimeout","cancelAnimationFrame","cb","updateElementPosition","willChange","setTransition","window","requestAnimationFrame","transform","persist","update","setTimeout","x","nativeEvent","clientX","y","clientY","_x","Math","min","_y","tiltX","toFixed","tiltY","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","getValues","children","Profile","onSubmitRemoval","userId","userEmail","data","alert","catch","err","images","console","log","removeButton","role","aria-label","image","Footer","href","rel","DATABASE","particlesOptions","particles","line_linked","shadow","enable","blur","number","density","value_area","initalState","input","joined","App","querySelectorAll","forEach","el","remove","getColors","getFaces","onImageResubmit","Error","count","colorsUsed","outputs","singleColor","w3c","push","calculateFaceLocations","imageElement","imageWidth","Number","imageHeight","clarifaiFaces","regions","boundingBoxes","face","calculateBoundingBox","boundingBox","displayBoundingBox","faceBoundingBoxData","region_info","bounding_box","leftCol","left_col","topRow","top_row","RightCol","right_col","bottomRow","bottom_row","box","holder","createElement","classList","add","right","bottom","parentElement","appendChild","content","params","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.3dfbcc46.chunk.js","sourcesContent":["import React from 'react';\n\n/**\n * Site navigation\n * \n * Required props:\n * - onRouteChange => Function to change the state of route\n * - isSignedIn => State to show relative links\n * - route => The current route from state\n */\nconst Navigation = ({ onRouteChange, isSignedIn, route }) => {\n  const mainLink = route === 'home' \n    ? \n    <p \n    onClick={() => onRouteChange('profile')}\n    className='link dim black underline pa3 pointer'>Profile</p>\n    :\n    <p \n      onClick={() => onRouteChange('home')}\n      className='link dim black underline pa3 pointer'>Home</p>\n\n  if (isSignedIn) {\n    return (\n      <nav className='main-nav end'>\n        {mainLink}\n        <p \n          onClick={() => onRouteChange('signin')}\n          className='link dim black underline pa3 pointer'>Sign out</p>\n      </nav>\n    )\n  } else {\n    return(\n      <nav className='main-nav end'>\n        <p \n          onClick={() => onRouteChange('signin')}\n          className='link dim black underline pa3 pointer'>Sign in</p>\n        <p \n          onClick={() => onRouteChange('register')}\n          className='link dim black underline pa3 pointer'>Register</p>\n      </nav>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Logo.css';\nimport funImages from './funGif.gif';\n\n/**\n * Site logo\n */\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <img src={funImages} alt='logo'/>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport Logo from '../Logo/Logo';\n\n/**\n * Site header \n * \n * Required props:\n * - isSignedIn => In order to dispaly the correct naviagtion from state\n * - onRouteChange => Function to change route state\n * - route => The current route from state\n */\nconst Header = ({isSignedIn, onRouteChange, route}) => {\n  return (\n    <header className='site-header'>\n      <Navigation \n          isSignedIn={isSignedIn}\n          onRouteChange={onRouteChange}\n          route={route} />\n      <Logo />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\n/**\n * Form input field\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - label => Displayed name\n * - name => For the is and label for\n * - type => Field type\n * - onChange => Function on input change\n * - onKeyUp => Function on key up - enter detection\n * Optional props:\n * - extraClass => For classlist \n */\nconst FormInput = ({label, name, type, onChange, onKeyUp, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  let autocomplete = ''\n  switch(name) {\n    case 'password':\n      autocomplete = 'current-password';\n      break;\n    case 'email-address':\n      autocomplete = 'email';\n      break;\n    case 'name':\n      autocomplete = 'name';\n      break;\n    default:\n      autocomplete = '';\n  }\n\n  return (\n    <div className='mt3'>\n      <label className='db fw6 lh-copy f6' htmlFor={type}>{label}</label>\n      <input \n        onChange={onChange}\n        onKeyUp={onKeyUp}\n        className={`${receivedClass} pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100`} \n        type={type} \n        name={name} \n        id={name} \n        autoComplete={autocomplete}\n      />\n    </div>\n  );\n}\n\nexport default FormInput;\n","import React from 'react';\n\n/**\n * Form submit\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - value => Displayed name\n * - type => Field type\n * - onClick => Function on button click\n * Optional props:\n * - extraClass => For classlist\n */\nconst FormSubmit = ({value, type, onClick, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  return (\n    <div className='mt3'>\n      <input \n        onClick={onClick}\n        className={`${receivedClass} b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib`} \n        type={type}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default FormSubmit;\n","import React, { Component } from 'react';\nimport FormInput from '../FormFields/FormInput/FormInput';\nimport FormSubmit from '../FormFields/FormSubmit/FormSubmit';\n\n/**\n * Sign In component\n * - Allows a user to sign in to the app by displaying a form\n * \n * Required props:\n * - loadUser => Functon to get user information from state\n * - onRouteChange => Function to change the state of route\n */\nclass SignIn extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n      loginError: ''\n    }\n  }\n\n  // Allow pressing the enter key and not only the button\n  handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      const signIn = document.querySelector('.signIn');\n      signIn.click();\n    }\n  }\n\n  // Set email on input change\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value })\n  }\n\n  // Set password on input change\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value })\n  }\n\n  // Check for user in database and login \n  onSubmitSignIn = (e) => {\n    e.preventDefault();\n    if ((this.state.signInEmail !== '') && (this.state.signInPassword !== '')) {\n      fetch(`${this.props.database}/signin`, {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          email: this.state.signInEmail,\n          password: this.state.signInPassword\n        })\n      })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      })\n      this.setState({loginError: ''});\n    } else {\n      this.setState({loginError: 'Please make sure both fields are entered'});\n    }\n  }\n\n  // Sign in as visitor\n  onSubmitVisitor = (e) => {\n    e.preventDefault();\n    fetch(`${this.props.database}/signin`, {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email: 'visitor@gmail.com',\n        password: 'visit'\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if (user.id) {\n        this.props.loadUser(user);\n        this.props.onRouteChange('home');\n      }\n    })\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    const loginError = this.state.loginError ? <p className='error-message'>{this.state.loginError}</p> : '';\n\n    return (\n      <article className='sign-in br3 ba dark-gray b--black-10 mv4 mw6 shadow-5 center'>\n        <form className='pa4 black-80' action='/'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f1 fw6 ph0 mh0'>Sign In</legend>\n              <FormInput \n                label='Email'\n                name='email-address'\n                type='email'\n                onChange={this.onEmailChange}\n                onKeyUp={this.handleKeyUp}\n                extraClass='inputField'\n              />\n              <FormInput \n                label='Password'\n                name='password'\n                type='password'\n                onChange={this.onPasswordChange}\n                onKeyUp={this.handleKeyUp}\n                extraClass='inputField'\n              />\n            </fieldset>\n            {loginError}\n            <FormSubmit\n              value='Sign in'\n              type='submit'\n              onClick={this.onSubmitSignIn}\n              extraClass='signIn'\n            />\n            <FormSubmit\n              value='Log in as Visitor'\n              type='submit'\n              onClick={this.onSubmitVisitor}\n              // extraClass=''\n            />\n            <div className='lh-copy mt3'>\n              <p \n                onClick={() => onRouteChange('register')}\n                className='f6 link dim black db pointer'>Register</p>\n            </div>\n          </div>\n        </form>\n      </article>\n    );\n  }  \n}\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport FormInput from '../FormFields/FormInput/FormInput';\nimport FormSubmit from '../FormFields/FormSubmit/FormSubmit';\n\n/**\n * Register component\n * - Allows a user to register to the app by displaying a form\n * \n * Required props:\n * - loadUser => Functon to get user information from state\n * - onRouteChange => Function to change the state of route\n */\nclass Register extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      nameError: '',\n      emailError: '',\n      passwordError: '',\n      registerError: ''\n    }\n  }\n\n  // Allow pressing the enter key and not only the button\n  handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      const register = document.querySelector('.register');\n      register.click();\n    }\n  }\n\n  // Sanitize user input\n  sanitize = (string) => {\n    const map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;',\n    };\n    const reg = /[&<>\"'/]/ig;\n    return string.replace(reg, (match)=>(map[match]));\n  }\n\n  // Set name on input change\n  onNameChange = (event) => {\n    this.setState({name: event.target.value })\n  }\n\n  // Set email on input change\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value })\n  }\n\n  // Set password on input change\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value })\n  }\n\n  // Validate user input and register the user\n  onSubmitRegister = (e) => {\n    e.preventDefault();\n    let {name, email, password } = this.state;\n    let validName = false;\n    let validEmail = false;\n    let validPassword = false;\n    const regexpEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (name !== '' ) {\n      name = this.sanitize(name)\n      this.setState({name: name})\n      validName = true\n      this.setState({nameError: ''});\n    } else {\n      this.setState({nameError: 'Please enter your name'});\n    }\n\n    if ((email !== '') && (regexpEmail.test(email))) {\n      validEmail = true\n      this.setState({emailError: ''});\n    } else {\n      this.setState({emailError: 'Please enter your email'});\n    }\n\n    if (password !== '' ) {\n      validPassword = true\n      this.setState({passwordError: ''});\n    } else {\n      this.setState({passwordError: 'Please enter your password'});\n    }  \n\n    if ( validName && validEmail && validPassword ) {\n      fetch(`${this.props.database}/register`, {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password\n        })\n      })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      })\n      this.setState({registerError: ''});\n    } else {\n      this.setState({registerError: 'Something went wrong'});\n    }\n  }\n\n  render() {\n    const nameError = this.state.nameError ? <p className='error-message'>{this.state.nameError}</p> : '';\n    const emailError = this.state.emailError ? <p className='error-message'>{this.state.emailError}</p> : '';\n    const passwordError = this.state.passwordError ? <p className='error-message'>{this.state.passwordError}</p> : '';\n    const registerError = this.state.registerError ? <p className='error-message'>{this.state.registerError}</p> : '';\n\n    return (\n      <article className='register br3 ba dark-gray b--black-10 mv4 mw6 shadow-5 center'>\n        <form className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f1 fw6 ph0 mh0'>Register</legend>\n              <FormInput \n                label='Name'\n                name='name'\n                type='text'\n                onChange={this.onNameChange}\n                onKeyUp={this.handleKeyUp}\n              />\n              {nameError}\n              <FormInput \n                label='Email'\n                name='email-address'\n                type='email'\n                onChange={this.onEmailChange}\n                onKeyUp={this.handleKeyUp}\n              />\n              {emailError}\n              <FormInput \n                label='Password'\n                name='password'\n                type='password'\n                onChange={this.onPasswordChange}\n                onKeyUp={this.handleKeyUp}\n              />\n              {passwordError}\n            </fieldset>\n            <FormSubmit\n              value='Register'\n              type='submit'\n              onClick={this.onSubmitRegister}\n              extraClass='register'\n            />\n            {registerError}\n          </div>\n        </form>        \n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\n\n/**\n * Greet component\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - name => User name from state\n * - entries => Amount of times images were submitted from state\n */\nconst Greet = ({name, entries}) => {\n  const greet = entries > 0 ? 'Welcome back' : 'Lets start';\n  return (\n    <div>\n      <div className='white f3'>\n        <p>{greet} <span className='capitalize'>{name}</span>, your current entry count is:</p>\n      </div>\n      <div className='white f1'>\n        <p>#{entries}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Greet;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\n/**\n * Image link form \n * - Input field to submit a url\n * - submit button\n * \n * Required props:\n * - onInputChange => Register input changes to state\n * - onButtonSubmit => Submit the image url\n * - imageUrlError => Display error to screen\n * - inputValue => Input value from state important in case of resubmission \n */\n// Allow pressing the enter key and not only the button\nconst handleKeyUp = (e) => {\n  if (e.keyCode === 13) {\n    const detect = document.querySelector('.detect');\n    detect.click();\n  }\n}\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit, imageUrlError, inputValue }) => {\n  return (\n    <div>\n      <p className='f3'>This App detects faces in images</p>\n      <p>Click on the <strong>paint icon</strong> to see which colors were detected</p>\n      <div className='center'>\n        <div className='center form pa4 br3 shadow-5'>\n          <input \n            className='f4 pa2 w-70 center' \n            value={inputValue}\n            type='url' \n            onChange={onInputChange}\n            onKeyUp={(e) => handleKeyUp(e)}\n          />\n          <button \n            className='detect w-30 grow link ph3 pv2 dib white bg-light-blue' \n            onClick={onButtonSubmit}\n          >Detect</button>\n        </div>\n      </div>\n        {imageUrlError}\n    </div>\n  );\n}\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport './FaceRecognition.css';\nimport colorsIcon from './colorsIcon.svg';\n\n/**\n * Displays \n * - Preview of submitted image url \n * - Squares where faces were found\n * - Option to see colors found in the image\n * \n * Required props:\n * - imageUrl => From state\n * - onShowClick => Function to change state of toggle color list\n */\nconst FaceRecognition = ({ imageUrl, onShowClick }) => {\nconst imgBlock = imageUrl ? <img id='imageElement' src={imageUrl} alt='result' /> : <p>Submit an image url to start</p>\nconst colorsView = imageUrl ? \n  <div className='view-colors' onClick={onShowClick}>\n    <img src={colorsIcon} alt='View Colors' />\n  </div> : '';\n\n  return (\n    <div className='center image-holder'>\n      {colorsView}\n      {imgBlock}\n    </div>\n  );\n}\n\nexport default FaceRecognition;\n","import React from 'react';\nimport './ColorList.css';\n\n/**\n * Pop up to show colors detected in images\n * \n * Required props:\n * - colors => Array of colors from the api\n * - showColor => Show or hide the element\n * - onShowClick => On click function to change the value of showColor\n */\nconst ColorList = ({ colors, showColor, onShowClick }) => {\n  const display = showColor ? 'block' : 'none';\n  let colorText = <p>No colors detected.</p>\n  if(colors.length) {\n    const list = colors.map(color => {\n      const { hex, name } = color;\n      return <li key={hex} ><span style={{backgroundColor:hex}}></span>HEX: {hex}, Name: {name}</li>;\n    });\n    colorText = <ul>{list}</ul>;\n  }  \n\n  return (\n    <div className='colors-list br3' style={{display: display}}>\n      <span \n        className='close-colors' \n        onClick={onShowClick}>X</span>\n      <h2>These colors were detected:</h2>\n      {colorText}\n    </div>\n  );\n}\n\nexport default ColorList;","import React from 'react';\nimport Greet from '../Greet/Greet';\nimport ImageLinkForm from '../ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from '../FaceRecognition/FaceRecognition';\nimport ColorList from '../ColorList/ColorList'\n\n/**\n * Main view of the fun with images app\n * \n * Required props:\n * - userName => User name from state\n * - entries => Count of user entries from state\n * - inputValue => User input from state\n * - imageUrlError => Error to display during url submittion from state\n * - onInputChange => Function to set state of input value\n * - onImageUrlSubmi => Function on url submit\n * - imageUrl => The image url from state\n * - boxes => Location of faces on the page\n * - toggleColorList => Function to toggle list of found colors\n * - colors => List of colors found by the API\n * - showColorList => Boolean to show or hide the colors pop up from state\n */\nconst FaceApp = ({\n  userName, \n  entries, \n  inputValue,\n  imageUrlError, \n  onInputChange, \n  onImageUrlSubmit,\n  imageUrl,\n  boxes,\n  toggleColorList,\n  colors,\n  showColorList\n}) => {\n  return (\n    <article className='pa4 mb4'>\n      <Greet \n        name={userName} \n        entries={entries} />\n      <ImageLinkForm\n        inputValue={inputValue}\n        imageUrlError={imageUrlError}\n        onInputChange={onInputChange} \n        onButtonSubmit={onImageUrlSubmit} />\n      <FaceRecognition \n        imageUrl={imageUrl} \n        boxes={boxes} \n        onShowClick={toggleColorList} />\n      <ColorList \n        colors={colors}\n        showColor={showColorList}\n        onShowClick={toggleColorList} />\n    </article>\n  );\n}\n\nexport default FaceApp;\n","import React from 'react';\nimport './ImageCard.css';\n\n/**\n * Image card to display submitted images with option to resubmit\n * \n * Required props:\n * - id => Image id for css selector\n * - url => Image url to display as background\n * - onResubmit => Function to resubmit the image \n */\nconst ImageCard = ({id, url, onResubmit}) => {\n  return (\n    <div id={`ImageCard-${id}`} className='ImageCard' style={{backgroundImage:`url(\"${url}\")`}}>\n      <button className='card-button' onClick={() => onResubmit(url)}>Resubmit</button>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React, { Component } from 'react';\n\n/**\n * Wiggle component\n * Used to adjust element prespective on hover\n * Has no content but it's children\n * \n * Required props:\n * - elementId => OF the element on the page\n * - children => All other children will be redered inside the component\n */\nclass Wiggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style : {}\n    }\n\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: \"1.1\",\n      speed: \"1000\",\n      transition: true,\n      axis: null,\n      reset: true\n    };\n\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = Object.assign({}, defaultSettings, this.props.options);\n    this.reverse = this.settings.reverse ? -1 : 1;\n\n    // Events\n    this.onMouseEnter = this.onMouseEnter.bind(this, this.props.onMouseEnter);\n    this.onMouseMove = this.onMouseMove.bind(this, this.props.onMouseMove);\n    this.onMouseLeave = this.onMouseLeave.bind(this, this.props.onMouseLeave);\n  }\n\n  // After component mount select the element on the page\n  componentDidMount() {\n    this.element = document.getElementById(this.props.elementId);\n  }\n\n  // Before component mount clear timeout and animation frames\n  componentWillUnmount() {\n    clearTimeout(this.transitionTimeout);\n    cancelAnimationFrame(this.updateCall);\n  }\n\n  // Update element styles on mouse enter\n  onMouseEnter(cb = () => {}, e) {\n    this.updateElementPosition();\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        willChange : 'transform'\n      }\n    }))\n\n    this.setTransition();\n\n    return cb(e)\n  }\n\n  // Reset transform styles\n  reset() {\n    window.requestAnimationFrame(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n\n          transform : `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n        }\n      }))\n    });\n  }\n\n  // Get animation frame on mouse move\n  onMouseMove(cb = () => {}, e) {\n    e.persist();\n\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n\n    return cb(e);\n  }\n\n  // Set the setting during mouse enter and leave\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n\n    this.setState(Object.assign({}, this.state, {\n      style : {\n        ...this.state.style,\n        transition : `${this.settings.speed}ms ${this.settings.easing}`\n      }\n    }))\n\n    this.transitionTimeout = setTimeout(() => {\n      this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transition: ''\n        }\n      }))\n    }, this.settings.speed);\n  }\n\n  // Reset setting on mouse leave\n  onMouseLeave(cb = () => {}, e) {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      this.reset();\n    }\n    return cb(e)\n  }\n\n  // Get values during the event\n  getValues(e) {\n    const x = (e.nativeEvent.clientX - this.left) / this.width;\n    const y = (e.nativeEvent.clientY - this.top) / this.height;\n    const _x = Math.min(Math.max(x, 0), 1);\n    const _y = Math.min(Math.max(y, 0), 1);\n\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n\n    const percentageX =  _x * 100\n    const percentageY = _y * 100\n\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n\n  // Update element position\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  // Update the style for the element\n  update(e) {\n    let values = this.getValues(e);\n\n    this.setState(Object.assign({}, this.state, {\n        style : {\n          ...this.state.style,\n          transform: `perspective(${this.settings.perspective}px)\n                      rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg)\n                      rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg)\n                      scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\n        }\n      }))\n\n    this.updateCall = null;\n  }\n  \n  render() {\n    const style = Object.assign({}, this.props.style, this.state.style)\n    return (\n      <div style={style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseMove={this.onMouseMove}\n        onMouseLeave={this.onMouseLeave}\n        options={{ max : 25 }}\n        >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Wiggle;\n","import React, { Component } from 'react';\nimport './Profile.css';\nimport ImageCard from '../ImageCard/ImageCard';\nimport Wiggle from '../Wiggle/Wiggle';\n\n/**\n * User Profile\n * - Showes summary of how many times the user used the site\n * - Shows a list of previously submitted images\n * - Offers the option to resubmit past images\n * - Allowes the user to delete his/ hers profile from the database\n * \n * Required props:\n * - userId => User id from state\n * - userEmail => User email from state\n * - userName => User name from state\n * - entries => Amount of times images were submitted from state\n * - onResubmit => Function to handle resubmission of images\n */\nclass Profile extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      images: []\n    }\n  }\n\n  // Fetch user submitted images from dtatebase\n  componentDidMount() {\n    fetch(`${this.props.database}/profile-images/${this.props.userId}`)\n    .then(response => response.json())\n    .then(data => {\n      if(data.length) {\n        this.setState({images: data})\n      }\n    })\n    .catch(err => console.log('Could not fetch images'));\n  }\n\n  // Delete the profile only in case profile is not 'Visitor'\n  onSubmitRemoval = () => {\n    fetch(`${this.props.database}/profile-removal/${this.props.userId}`, {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email: this.props.userEmail,\n        id: this.props.userId\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      alert(data);\n    })\n    .then(() => this.props.onRouteChange('signin'))\n    .catch(err => alert('Unable to remove profile'));\n  }\n\n  render() {\n    const { userId, userName, entries, onResubmit } = this.props;\n    const removeButton = userId !== 1 ? \n      <button \n        className='remove-button'\n        onClick={this.onSubmitRemoval}\n        >Delete your profile</button> \n        : '';\n\n    const greet = entries > 0 ?  \n      <div>\n        <p>Thank you for using the app {entries} times so far!!</p> \n        <h3>The following images were submitted by you:</h3>\n        <p>Note: Some images might have been submitted multipale times</p>\n      </div> \n      : \n      <h3>You haven't submitted any images yet.. </h3>;\n\n    let images = entries > 0 ? <p>Loading...</p> : <p>Go ahead and submit <span role='img' aria-label='Smirking Face'>😏</span></p>\n    if (this.state.images.length) {\n      images = this.state.images.map(image => {\n        return (\n          <Wiggle\n            key={image.id}\n            elementId= {`ImageCard-${image.id}`}>\n              <ImageCard\n                key={image.id}\n                id={image.id}\n                url={image.url}\n                onResubmit={onResubmit}\n              />\n          </Wiggle>\n        )        \n      });\n    }\n\n    return(\n      <article className='profile pa4 mb4'>\n        <h2>Hi <span className='capitalize'>{userName}</span></h2>\n        {greet}\n        {removeButton}\n        <section className='images-container'>\n          {images}\n        </section>\n      </article>\n    )\n  }\n}\n  \nexport default Profile;\n","import React from 'react';\n\n/**\n * Site footer\n */\nconst Footer = () => {\n  return (\n    <footer className='site-footer'>\n      <p>Made with <span>&hearts;</span> by <a href='https://github.com/TomKiWorld' target='_blank' rel='noopener noreferrer'>TomKiWorld</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Header from './components/Header/Header';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceApp from './components/FaceApp/FaceApp';\nimport Profile from './components/Profile/Profile';\nimport Footer from './components/Footer/Footer';\n\n// Set to false during local development \n// Make sure to change your production url\nconst productionEnv = true;\nconst DATABASE = productionEnv ? 'https://fierce-oasis-21316.herokuapp.com' : 'http://localhost:3000';\n\n// Options for the particals component\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    },\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n}\n\n// Initiale state for reset during logout\nconst initalState = {\n  input: '',\n  imageUrl: '',\n  imageUrlError: '',\n  colors: [],\n  showColorList: false,\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initalState;\n  }\n\n  // Set the user from the response into state\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // Set the input value on change\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  // Validate the url on submit and make sure a new url is entered\n  onImageUrlSubmit = () => {\n    if (this.state.input) {\n      const regexp =  /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n      if (this.state.input !== this.state.imageUrl) {\n        if (regexp.test(this.state.input)) {\n          this.setState({\n            imageUrl: this.state.input,\n            imageUrlError: ''\n          });\n          document.querySelectorAll('.bounding-box').forEach(el => el.remove());\n          this.getColors();\n          this.getFaces();\n        } else {\n          this.setState({imageUrlError: 'Please enter a valid url'});\n        }        \n      } else {\n        this.setState({imageUrlError: 'Please enter a new url'});\n      } \n    } else {\n      this.setState({imageUrlError: 'Please enter an image url'});\n    }    \n  }\n\n  // Resubmit an image from the profile page\n  onImageResubmit = (url) => {\n    this.onRouteChange('home');\n    this.setState({\n      input: url,\n      imageUrl: '',\n      imageUrlError: ''\n    });\n    window.setTimeout(() => {\n      this.onImageUrlSubmit();\n    }, 500);\n  }\n\n  // Fetch the colors from the colors API and set state\n  getColors = () => {\n    fetch(`${DATABASE}/image-colors`, {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (!response) {\n        throw new Error('We are sorry, but something went wrong');\n      }\n      fetch(`${DATABASE}/image`, {\n        method: 'put',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id,\n          url: this.state.imageUrl\n        })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user, { entries: count }));\n      })\n      .catch(err => console.log('getFaces colors: ', err))\n\n      const colorsUsed = [];\n      const colorsFound = response.outputs[0].data.colors;\n      colorsFound.map(singleColor => {\n        const color = {\n          hex: singleColor.w3c.hex,\n          name: singleColor.w3c.name\n        }\n        colorsUsed.push(color);\n        return this.setState({colors: colorsUsed});\n      })\n    })\n    .catch(err => console.log(err));\n  }\n\n  // Fetch the faces from the faces API and set state\n  getFaces = () => {\n    fetch(`${DATABASE}/image-faces`, {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (!response) {\n        throw new Error('We are sorry, but something went wrong');\n      }\n      this.calculateFaceLocations(response)\n    })\n    .catch(err => console.log('getFaces error: ', err));\n  }\n\n  // Calculate location of all bounding boxes based on the getFaces response\n  calculateFaceLocations = (data) => {\n    const imageElement = document.getElementById('imageElement');\n    if (!imageElement) {\n      return;\n    }\n    const imageWidth = Number(imageElement.width);\n    const imageHeight = Number(imageElement.height);\n    const clarifaiFaces = data.outputs[0].data.regions;\n    const boundingBoxes = [];\n    clarifaiFaces.map(face => this.calculateBoundingBox(face, imageWidth, imageHeight, boundingBoxes));\n    boundingBoxes.map(boundingBox => this.displayBoundingBox(boundingBox, imageElement));    \n  }\n\n  // Calculate location of a single bounding box based on the getFaces response\n  calculateBoundingBox = (face, imageWidth, imageHeight, boundingBoxes) => {\n    const faceBoundingBoxData = face.region_info.bounding_box;\n    const boundingBox = {\n      leftCol: faceBoundingBoxData.left_col * imageWidth,\n      topRow: faceBoundingBoxData.top_row * imageHeight,\n      RightCol: imageWidth - (faceBoundingBoxData.right_col * imageWidth),\n      bottomRow: imageHeight - (faceBoundingBoxData.bottom_row * imageHeight)\n    }\n    boundingBoxes.push(boundingBox);\n  }\n\n  // Display the bounding box in parent element\n  displayBoundingBox = (box, holder) => {\n    const boundingBox = document.createElement('DIV');\n    boundingBox.classList.add('bounding-box');\n    boundingBox.style.left = `${box.leftCol.toFixed(4)}px`;\n    boundingBox.style.top = `${box.topRow.toFixed(4)}px`;\n    boundingBox.style.right = `${box.RightCol.toFixed(4)}px`;\n    boundingBox.style.bottom = `${box.bottomRow.toFixed(4)}px`;\n    return holder.parentElement.appendChild(boundingBox);\n  }\n\n  // Toggle the color list pop up\n  toggleColorList = () => {\n    this.setState({showColorList: !this.state.showColorList});\n  }\n\n  // Change the route state\n  onRouteChange = (route) => {\n    ((route === 'home') || (route === 'profile')) ? this.setState({isSignedIn: true}) : this.setState({isSignedIn: false});\n    if (route === 'signin') {\n      this.setState(initalState)\n    }\n    if (route === 'home') {\n      this.setState({\n        input: '',\n        imageUrl: '',\n        imageUrlError: ''\n      })\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, boxes, colors, showColorList, route } = this.state;\n    const imageUrlError = this.state.imageUrlError ? <p className='error-message'>{this.state.imageUrlError}</p> : '';\n    let content = '';\n    switch(route) {\n      case 'home':\n        content = \n        <FaceApp \n          userName={this.state.user.name}\n          entries={this.state.user.entries}\n          inputValue={this.state.input}\n          imageUrlError={imageUrlError}\n          onInputChange={this.onInputChange} \n          onImageUrlSubmit={this.onImageUrlSubmit}\n          imageUrl={imageUrl} \n          boxes={boxes} \n          toggleColorList={this.toggleColorList}\n          colors={colors}\n          showColorList={showColorList}\n        />\n      break;\n      case 'register':\n        content = \n        <Register \n          database={DATABASE}\n          loadUser={this.loadUser}\n          onRouteChange={this.onRouteChange}\n        />\n      break;\n      case 'profile':\n        content = \n        <Profile \n          database={DATABASE}\n          userId={this.state.user.id}\n          userName={this.state.user.name}\n          userEmail={this.state.user.email}\n          entries={this.state.user.entries}\n          onRouteChange={this.onRouteChange}\n          onResubmit={this.onImageResubmit}\n        />\n      break;\n      default:\n        content =\n        <SignIn \n          database={DATABASE}\n          loadUser={this.loadUser}\n          onRouteChange={this.onRouteChange} \n        />\n    }\n\n    return (\n      <div className='App'>\n        <Particles\n          className='particles' \n          params={particlesOptions}\n        />\n        <Header \n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange} \n          route={this.state.route}\n          />\n        { content }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/funGif.1e4a7e6e.gif\";","module.exports = __webpack_public_path__ + \"static/media/colorsIcon.16c2fe4a.svg\";"],"sourceRoot":""}