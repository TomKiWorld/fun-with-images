{"version":3,"sources":["actions.js","constants.js","components/SuspenseLoad/SuspenseLoad.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Header/Header.js","containers/SignIn/SignIn.js","components/Footer/Footer.js","containers/MainPage/MainPage.js","containers/App.js","serviceWorker.js","reducers.js","index.js","components/Preloader/Preloader.js","components/FormFields/FormInput/FormInput.js","components/FormFields/FormSubmit/FormSubmit.js","components/Logo/funGif.gif"],"names":["setInputValue","text","type","CHANGE_INPUT_VALUE","payload","resubmitImageInput","RESUBMIT_INPUT_VALUE","resubmitImageUrl","bool","RESUBMIT_IMAGE_URL","setImageUrl","SET_IMAGE_URL","setImageUrlErr","SET_IMAGE_URL_ERROR","setUser","data","CHANGE_USER","setEntries","user","count","SET_USER_ENTRIES","DATABASE","SuspenseLoad","props","fallback","Preloader","children","Navigation","onRouteChange","isSignedIn","mainLink","route","onClick","className","Logo","src","funImages","alt","Header","SignIn","onFieldChange","event","term","setState","target","value","onSubmitSignIn","e","email","password","preventDefault","loading","fetch","method","headers","body","JSON","stringify","then","response","json","id","loadUser","loginError","catch","err","state","signInEmail","signInPassword","this","preload","action","FormInput","label","name","onChange","extraClass","FormSubmit","Component","Footer","href","rel","FaceApp","React","lazy","Register","MainProfile","particlesOptions","particles","number","density","enable","value_area","initalState","MainPage","onInputChange","onUserLoad","onImageChange","onImageError","renderContent","params","console","log","process","App","connect","userInformation","dispatch","Boolean","window","location","hostname","match","inputImageState","inputValue","imageUrl","imageUrlError","resubmit","initalUser","entries","joined","rootReducer","combineReducers","imageUrlInputValue","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","onKeyUp","receivedClass","autocomplete","htmlFor","autoComplete","module","exports"],"mappings":"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","file":"static/js/main.acf97ac8.chunk.js","sourcesContent":["import {\n  CHANGE_INPUT_VALUE,\n  RESUBMIT_INPUT_VALUE,\n  RESUBMIT_IMAGE_URL,\n  SET_IMAGE_URL,\n  SET_IMAGE_URL_ERROR,\n  CHANGE_USER,\n  SET_USER_ENTRIES\n} from './constants';\n\nexport const setInputValue = (text) => {\n  return {\n    type: CHANGE_INPUT_VALUE,\n    payload: text\n  }\n};\n\nexport const resubmitImageInput = (text) => {\n  return {\n    type: RESUBMIT_INPUT_VALUE,\n    payload: text\n  }\n};\n\nexport const resubmitImageUrl = (bool) => {\n  return {\n    type: RESUBMIT_IMAGE_URL,\n    payload: bool\n  }\n};\n\nexport const setImageUrl = (text) => {\n  return {\n    type: SET_IMAGE_URL,\n    payload: text\n  }\n};\n\nexport const setImageUrlErr = (text) => {\n  return {\n    type: SET_IMAGE_URL_ERROR,\n    payload: text\n  }\n};\n\nexport const setUser = (data) => {\n  return {\n    type: CHANGE_USER,\n    payload: data\n  }\n};\n\nexport const setEntries = (user, count) => {\n  return {\n    type: SET_USER_ENTRIES,\n    payload: {\n      user,\n      count\n    }\n  }\n};\n","export const DATABASE ='http://localhost:3000';\n// export const DATABASE ='https://fierce-oasis-21316.herokuapp.com';\n\n// Image url setup\nexport const CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE';\nexport const SET_IMAGE_URL = 'SET_IMAGE_URL';\nexport const SET_IMAGE_URL_ERROR = 'SET_IMAGE_URL_ERROR';\nexport const RESUBMIT_INPUT_VALUE = 'RESUBMIT_INPUT_VALUE';\nexport const RESUBMIT_IMAGE_URL = 'RESUBMIT_IMAGE_URL';\n\n// User information\nexport const CHANGE_USER = 'CHANGE_USER';\nexport const SET_USER_ENTRIES = 'SET_USER_ENTRIES';\n","import React, { Suspense } from 'react';\nimport Preloader from '../Preloader/Preloader';\n\nconst SuspenseLoad = (props) => {\n  return (\n    <Suspense fallback={<Preloader />}>\n      {props.children}\n    </Suspense>\n  );\n}\n\nexport default SuspenseLoad;\n","import React from 'react';\n\n/**\n * Site navigation\n * \n * Required props:\n * - onRouteChange => Function to change the state of route\n * - isSignedIn => State to show relative links\n * - route => The current route from state\n */\nconst Navigation = ({ onRouteChange, isSignedIn, route }) => {\n  const mainLink = route === 'home' \n    ? \n    <p \n    onClick={() => onRouteChange('profile')}\n    className='link dim black underline pa3 pointer'>Profile</p>\n    :\n    <p \n      onClick={() => onRouteChange('home')}\n      className='link dim black underline pa3 pointer'>Home</p>\n\n  if (isSignedIn) {\n    return (\n      <nav className='main-nav end'>\n        {mainLink}\n        <p \n          onClick={() => onRouteChange('signin')}\n          className='link dim black underline pa3 pointer'>Sign out</p>\n      </nav>\n    )\n  } else {\n    return(\n      <nav className='main-nav end'>\n        <p \n          onClick={() => onRouteChange('signin')}\n          className='link dim black underline pa3 pointer'>Sign in</p>\n        <p \n          onClick={() => onRouteChange('register')}\n          className='link dim black underline pa3 pointer'>Register</p>\n      </nav>\n    )\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Logo.css';\nimport funImages from './funGif.gif';\n\n/**\n * Site logo\n */\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <img src={funImages} alt='logo'/>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport Logo from '../Logo/Logo';\n\n/**\n * Site header \n * \n * Required props:\n * - isSignedIn => In order to dispaly the correct naviagtion from state\n * - onRouteChange => Function to change route state\n * - route => The current route from state\n */\nconst Header = ({isSignedIn, onRouteChange, route}) => {\n  return (\n    <header className='site-header'>\n      <Navigation \n          isSignedIn={isSignedIn}\n          onRouteChange={onRouteChange}\n          route={route} />\n      <Logo />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport FormInput from '../../components/FormFields/FormInput/FormInput';\nimport FormSubmit from '../../components//FormFields/FormSubmit/FormSubmit';\nimport Preloader from '../../components/Preloader/Preloader';\nimport { DATABASE } from '../../constants';\n\n/**\n * Sign In component\n * - Allows a user to sign in to the app by displaying a form\n * \n * Required props:\n * - loadUser => Functon to get user information from state\n * - onRouteChange => Function to change the state of route\n */\nclass SignIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n      loginError: '',\n      loading: false\n    }\n  }\n\n  // Set state on input change\n  onFieldChange = (event, term) => {\n    this.setState({[term]: event.target.value })\n  }\n\n  // Sign in \n  onSubmitSignIn = (e, email, password) => {\n    e.preventDefault();\n    if ((email !== '') && (password !== '')) {\n      this.setState({loading: true})\n      fetch(`${DATABASE}/signin`, {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.setState({loading: false});\n          this.props.onRouteChange('home');\n        } else {\n          this.setState({\n            loginError: user,\n            loading: false\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loginError: 'Something went wrong please try again later',\n          loading: false\n        });\n      })\n    } else {\n      this.setState({loginError: 'Please make sure both fields are entered'});\n    }\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    const loginError = this.state.loginError ? <p className='error-message'>{this.state.loginError}</p> : '';\n    const preload = this.state.loading ? <Preloader/> : '';\n\n    return (\n      <article className='sign-in br3 ba dark-gray b--black-10 mv4 mw6 shadow-5 center'>\n        <form className='pa4 black-80' action='/'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <h1 className='f1 fw6 ph0 mh0'>Sign In</h1>\n              <FormInput \n                label='Email'\n                name='email-address'\n                type='email'\n                onChange={(e) => this.onFieldChange(e, 'signInEmail')}\n                extraClass='inputField'\n              />\n              <FormInput \n                label='Password'\n                name='password'\n                type='password'\n                onChange={(e) => this.onFieldChange(e, 'signInPassword')}\n                extraClass='inputField'\n              />\n            </fieldset>\n            {loginError}\n            <FormSubmit\n              value='Sign in'\n              type='submit'\n              onClick={(e) => this.onSubmitSignIn(e, this.state.signInEmail, this.state.signInPassword)}\n              extraClass='signIn'\n            />\n            <FormSubmit\n              value='Log in as Visitor'\n              type='submit'\n              onClick={(e) => this.onSubmitSignIn(e, 'tester@gmail.com', 'tester')}\n            />\n            <div className='lh-copy mt3'>\n              <p \n                onClick={() => onRouteChange('register')}\n                className='f6 link dim black db pointer'>Register</p>\n            </div>\n          </div>\n        </form>\n        {preload}\n      </article>\n    );\n  }  \n}\n\nexport default SignIn;\n","import React from 'react';\n\n/**\n * Site footer\n */\nconst Footer = () => {\n  return (\n    <footer className='site-footer'>\n      <p>Made with <span>&hearts;</span> by <a href='https://github.com/TomKiWorld' target='_blank' rel='noopener noreferrer'>TomKiWorld</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Particles from 'react-particles-js';\nimport SuspenseLoad from '../../components/SuspenseLoad/SuspenseLoad';\nimport Header from '../../components/Header/Header';\nimport SignIn from '../SignIn/SignIn';\nimport Footer from '../../components/Footer/Footer';\n\nconst FaceApp= React.lazy(() => import('../FaceApp/FaceApp'));\nconst Register= React.lazy(() => import('../Register/Register'));\nconst MainProfile= React.lazy(() => import('../MainProfile/MainProfile'));\n\n// Options for the particals component\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n}\n\n// Initiale state for reset during logout\nconst initalState = {\n  route: 'signin',\n  isSignedIn: false\n}\n\nclass MainPage extends Component {\n  constructor() {\n    super();\n    this.state = initalState;\n  }\n\n  // Change the route state\n  onRouteChange = (route) => {\n    ((route === 'home') || (route === 'profile')) ? this.setState({isSignedIn: true}) : this.setState({isSignedIn: false});\n    if (route === 'signin') {\n      this.setState(initalState);\n      this.props.onInputChange('');\n      this.props.onUserLoad({});\n    }\n    if (route === 'home') {\n      this.props.onImageChange('');\n      this.props.onImageError('');\n    }\n    this.setState({route: route})\n  }\n\n  renderContent = (route) => {\n    switch(route) {\n      case 'signin':\n        return (\n          <SignIn\n            loadUser={this.props.onUserLoad}\n            onRouteChange={this.onRouteChange} \n          />\n        );\n      case 'home':\n        return (\n          <SuspenseLoad>\n            <FaceApp />\n          </SuspenseLoad>\n        );\n      case 'register':\n        return (\n          <SuspenseLoad>\n            <Register \n              loadUser={this.props.onUserLoad}\n              onRouteChange={this.onRouteChange}\n            />\n          </SuspenseLoad>\n        );\n      case 'profile':\n        return (\n          <SuspenseLoad>\n            <MainProfile\n              onRouteChange={this.onRouteChange}\n            />\n          </SuspenseLoad>\n        );\n      default:\n        return (\n          <SignIn \n            loadUser={this.props.onUserLoad}\n            onRouteChange={this.onRouteChange} \n          />\n        );\n    }\n  }\n\n  render() {\n    const { isSignedIn, route } = this.state;\n\n    return (\n      <div className='App'>\n        <Particles\n          className='particles' \n          params={particlesOptions}\n        />\n        <Header \n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange} \n          route={route}\n          />\n        { this.renderContent(route)}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setInputValue, setImageUrl, setImageUrlErr, setUser } from '../actions';\n\nimport './App.css';\n\nimport MainPage from './MainPage/MainPage';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userInformation.user\n  }\n}\nconsole.log(process.env)\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onInputChange: (text) => dispatch(setInputValue(text)),\n    onImageChange: (text) => dispatch(setImageUrl(text)),\n    onImageError: (text) => dispatch(setImageUrlErr(text)),\n    onUserLoad: (data) => dispatch(setUser(data))\n  }\n}\n\nclass App extends Component {\n  render() {\n    return <MainPage { ...this.props } />;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CHANGE_INPUT_VALUE,\n  SET_IMAGE_URL,\n  SET_IMAGE_URL_ERROR,\n  RESUBMIT_INPUT_VALUE,\n  RESUBMIT_IMAGE_URL,\n  CHANGE_USER,\n  SET_USER_ENTRIES\n} from './constants';\n\nconst inputImageState = {\n  inputValue: '',\n  imageUrl: '',\n  imageUrlError: '',\n  resubmit: false\n}\n\nexport const imageUrlInputValue = (state=inputImageState, action={}) => {\n  switch(action.type){\n    case CHANGE_INPUT_VALUE : \n      return { ...state, inputValue: action.payload };\n    case RESUBMIT_INPUT_VALUE :\n      return { ...state, inputValue: action.payload };\n    case RESUBMIT_IMAGE_URL :\n      return { ...state, resubmit: action.payload };\n    case SET_IMAGE_URL :\n      return { ...state, imageUrl: action.payload };\n    case SET_IMAGE_URL_ERROR :\n      return { ...state, imageUrlError: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst initalUser = {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nexport const userInformation = (state=initalUser, action={}) => {\n  switch(action.type) {\n    case CHANGE_USER:\n      if (action.payload && action.payload.id) {\n        const user = action.payload;\n        return {\n          ...state, user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            entries: user.entries,\n            joined: user.joined\n          }\n        }\n      };\n      return state;\n    case SET_USER_ENTRIES:\n       const user = action.payload.user\n        return {\n          ...state, user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            entries: action.payload.count,\n            joined: user.joined\n          }\n        };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { imageUrlInputValue, userInformation } from './reducers';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'tachyons';\nimport './index.css';\n\nconst rootReducer = combineReducers({ imageUrlInputValue, userInformation });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\nimport './Preloader.css';\n\n/**\n * Site Preloader\n */\nconst Preloader = () => {\n  return (\n    <div className=\"Preloader\">\n      <div className=\"Preloader__holder\">\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__bar\"></div>\n        <div className=\"Preloader__ball\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;\n","import React from 'react';\n\n/**\n * Form input field\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - label => Displayed name\n * - name => For the is and label for\n * - type => Field type\n * - onChange => Function on input change\n * - onKeyUp => Function on key up - enter detection\n * Optional props:\n * - extraClass => For classlist \n */\nconst FormInput = ({label, name, type, onChange, onKeyUp, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  let autocomplete = ''\n  switch(name) {\n    case 'password':\n      autocomplete = 'current-password';\n      break;\n    case 'email-address':\n      autocomplete = 'email';\n      break;\n    case 'name':\n      autocomplete = 'name';\n      break;\n    default:\n      autocomplete = '';\n  }\n\n  return (\n    <div className='mt3'>\n      <label className='db fw6 lh-copy f6' htmlFor={type}>{label}\n        <input \n          onChange={onChange}\n          onKeyUp={onKeyUp}\n          className={`${receivedClass} pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100`} \n          type={type} \n          name={name} \n          id={name} \n          autoComplete={autocomplete}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default FormInput;\n","import React from 'react';\n\n/**\n * Form submit\n * - Display short greet and amount of entries the user used the app\n * \n * Required props:\n * - value => Displayed name\n * - type => Field type\n * - onClick => Function on button click\n * Optional props:\n * - extraClass => For classlist\n */\nconst FormSubmit = ({value, type, onClick, extraClass}) => {\n  const receivedClass= extraClass ?? '';\n  return (\n    <div className='mt3'>\n      <input \n        onClick={onClick}\n        className={`${receivedClass} b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib`} \n        type={type}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default FormSubmit;\n","module.exports = __webpack_public_path__ + \"static/media/funGif.d1e0a335.gif\";"],"sourceRoot":""}